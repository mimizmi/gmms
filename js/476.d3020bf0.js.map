{"version":3,"file":"js/476.d3020bf0.js","mappings":"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","sources":["webpack://gdmu-mentor-selection/./node_modules/vue-loader/dist/exportHelper.js","webpack://gdmu-mentor-selection/./src/api/grade.js","webpack://gdmu-mentor-selection/./src/api/major.js","webpack://gdmu-mentor-selection/./src/api/student.js","webpack://gdmu-mentor-selection/./src/views/admin/manage/group-manage.vue","webpack://gdmu-mentor-selection/./src/views/admin/manage/group-manage.vue?f938"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// runtime helper for setting properties on components\n// in a tree-shakable way\nexports.default = (sfc, props) => {\n    const target = sfc.__vccOpts || sfc;\n    for (const [key, val] of props) {\n        target[key] = val;\n    }\n    return target;\n};\n","import request from '@/utils/request'\r\n\r\n// 获取所有年级\r\nexport function getAllGrades() {\r\n  return request({\r\n    url: '/api/Grade/get-all',\r\n    method: 'get'\r\n  })\r\n} ","import request from '@/utils/request'\r\n\r\n// 获取所有专业\r\nexport function getAllMajors() {\r\n  return request({\r\n    url: '/api/Major/get-all',\r\n    method: 'get'\r\n  })\r\n} ","import request from '@/utils/request'\r\n\r\n// 获取未分组的学生\r\nexport function getUnsetStudents(gde, mjr) {\r\n  return request({\r\n    url: '/api/Student/get-unset',\r\n    method: 'get',\r\n    params: {\r\n      gde,\r\n      mjr\r\n    }\r\n  })\r\n}\r\n\r\n// 更新学生信息\r\nexport function updateStudentInfo(data) {\r\n  return request({\r\n    url: '/api/Student/update-info',\r\n    method: 'post',\r\n    data\r\n  })\r\n}\r\n\r\n// 更新学生密码\r\nexport function updateStudentPassword(id, newPassword) {\r\n  return request({\r\n    url: '/api/Student/update-password',\r\n    method: 'post',\r\n    params: {\r\n      id,\r\n      newPassword\r\n    }\r\n  })\r\n}\r\n\r\n// 获取登录记录\r\nexport function getLoginRecord(account) {\r\n  return request({\r\n    url: '/api/Student/login-record',\r\n    method: 'get',\r\n    params: { account }\r\n  })\r\n}\r\n\r\n// 获取所有学生\r\nexport function getAllStudents() {\r\n  return request({\r\n    url: '/api/Student',\r\n    method: 'get'\r\n  })\r\n}\r\n\r\n// 更新学生信息\r\nexport function updateStudentInfoByAdmin(id, data) {\r\n  return request({\r\n    url: `/api/Student/update/${id}`,\r\n    method: 'post',\r\n    data\r\n  })\r\n}\r\n\r\n// 重置学生密码\r\nexport function resetStudentPassword(id, newPassword) {\r\n  return request({\r\n    url: '/api/Student/update-password',\r\n    method: 'post',\r\n    params: {\r\n      id,\r\n      newPassword\r\n    }\r\n  })\r\n}\r\n\r\n// 删除学生\r\nexport function deleteStudent(id) {\r\n  return request({\r\n    url: `/api/Student/delete/${id}`,\r\n    method: 'post'\r\n  })\r\n}\r\n\r\n// 添加单个学生\r\nexport function addStudent(data) {\r\n  return request({\r\n    url: '/api/Student',\r\n    method: 'post',\r\n    data\r\n  })\r\n}\r\n\r\n// 批量添加学生\r\nexport function bulkCreateStudents(data) {\r\n  return request({\r\n    url: '/api/Student/bulk-create',\r\n    method: 'post',\r\n    data\r\n  })\r\n} ","<template>\r\n  <div class=\"group-manage\">\r\n    <div class=\"page-header\">\r\n      <h2>小组管理</h2>\r\n      <div class=\"header-desc\">管理所有小组信息，支持添加/删除成员和导师</div>\r\n    </div>\r\n\r\n    <!-- 筛选区域 -->\r\n    <div class=\"filter-section\">\r\n      <el-form :inline=\"true\" :model=\"filterForm\" class=\"filter-form\">\r\n        <div class=\"filter-main\">\r\n          <el-form-item label=\"年级\">\r\n            <el-select \r\n              v-model=\"filterForm.grade\" \r\n              clearable \r\n              placeholder=\"选择年级\"\r\n              style=\"width: 160px\"\r\n              @change=\"handleSearch\"\r\n            >\r\n              <el-option\r\n                v-for=\"grade in grades\"\r\n                :key=\"grade.gde_id\"\r\n                :label=\"`${grade.gde_value}级`\"\r\n                :value=\"grade.gde_value\"\r\n              />\r\n            </el-select>\r\n          </el-form-item>\r\n          <el-form-item label=\"专业\">\r\n            <el-select \r\n              v-model=\"filterForm.major\" \r\n              clearable \r\n              placeholder=\"选择专业\"\r\n              style=\"width: 240px\"\r\n              @change=\"handleSearch\"\r\n            >\r\n              <el-option\r\n                v-for=\"major in majors\"\r\n                :key=\"major.mjr_id\"\r\n                :label=\"major.mjr_name\"\r\n                :value=\"major.mjr_name\"\r\n              />\r\n            </el-select>\r\n          </el-form-item>\r\n          <el-form-item label=\"搜索\">\r\n            <el-input\r\n              v-model=\"filterForm.keyword\"\r\n              placeholder=\"搜索小组名称/选题\"\r\n              clearable\r\n              style=\"width: 200px\"\r\n            >\r\n              <template #prefix>\r\n                <el-icon><Search /></el-icon>\r\n              </template>\r\n            </el-input>\r\n          </el-form-item>\r\n          <el-form-item>\r\n            <el-radio-group v-model=\"filterForm.filterType\" @change=\"handleFilterTypeChange\">\r\n              <el-radio-button label=\"\">全部小组</el-radio-button>\r\n              <el-radio-button label=\"unselected\">未预选</el-radio-button>\r\n              <el-radio-button label=\"not-full\">未满人</el-radio-button>\r\n              <el-radio-button label=\"without-teacher\">未分配导师</el-radio-button>\r\n              <el-radio-button label=\"with-teacher\">已分配导师</el-radio-button>\r\n            </el-radio-group>\r\n          </el-form-item>\r\n        </div>\r\n        <div class=\"filter-actions\">\r\n          <el-form-item>\r\n            <el-button type=\"primary\" @click=\"handleSearch\">\r\n              <el-icon><Search /></el-icon>\r\n              搜索\r\n            </el-button>\r\n            <el-button type=\"success\" @click=\"resetFilter\">\r\n              <el-icon><Refresh /></el-icon>\r\n              重置筛选\r\n            </el-button>\r\n            <el-button type=\"primary\" @click=\"refreshData\">\r\n              <el-icon><Refresh /></el-icon>\r\n              刷新数据\r\n            </el-button>\r\n          </el-form-item>\r\n          <el-form-item>\r\n            <el-button type=\"success\" @click=\"handleCreateGroup\">\r\n              <el-icon><Plus /></el-icon>\r\n              创建小组\r\n            </el-button>\r\n          </el-form-item>\r\n        </div>\r\n      </el-form>\r\n    </div>\r\n\r\n    <!-- 小组列表 -->\r\n    <el-table\r\n      :data=\"currentPageGroups\"\r\n      stripe\r\n      v-loading=\"loading\"\r\n      style=\"width: 100%\"\r\n      :header-cell-style=\"{\r\n        background: '#fafafa',\r\n        color: '#606266',\r\n        fontWeight: 600\r\n      }\"\r\n      :cell-style=\"{\r\n        padding: '12px 0',\r\n        fontSize: '14px'\r\n      }\"\r\n      border\r\n    >\r\n      <el-table-column prop=\"group_id\" label=\"ID\" width=\"80\" />\r\n      <el-table-column prop=\"group_name\" label=\"小组名称\" width=\"120\" />\r\n      <el-table-column prop=\"group_title\" label=\"选题\" min-width=\"200\" show-overflow-tooltip />\r\n      <el-table-column prop=\"group_info\" label=\"简介\" min-width=\"200\" show-overflow-tooltip />\r\n      <el-table-column label=\"成员\" width=\"200\">\r\n        <template #default=\"{ row }\">\r\n          <el-button \r\n            type=\"primary\" \r\n            link\r\n            @click=\"handleManageMembers(row)\"\r\n          >\r\n            管理成员\r\n          </el-button>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"导师\" width=\"200\">\r\n        <template #default=\"{ row }\">\r\n          <el-button \r\n            type=\"primary\" \r\n            link\r\n            @click=\"handleManageTeachers(row)\"\r\n          >\r\n            管理导师\r\n          </el-button>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"操作\" width=\"100\" fixed=\"right\">\r\n        <template #default=\"{ row }\">\r\n          <el-button \r\n            type=\"danger\" \r\n            link\r\n            @click=\"handleDeleteGroup(row)\"\r\n          >\r\n            删除\r\n          </el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <!-- 分页组件 -->\r\n    <div class=\"pagination\">\r\n      <el-pagination\r\n        v-model:current-page=\"currentPage\"\r\n        v-model:page-size=\"pageSize\"\r\n        :total=\"filteredGroups.length\"\r\n        :page-sizes=\"[10, 20, 30, 50]\"\r\n        layout=\"total, sizes, prev, pager, next, jumper\"\r\n        @size-change=\"handleSizeChange\"\r\n        @current-change=\"handleCurrentChange\"\r\n      />\r\n    </div>\r\n\r\n    <!-- 创建小组对话框 -->\r\n    <el-dialog\r\n      v-model=\"createDialogVisible\"\r\n      title=\"创建小组\"\r\n      width=\"50%\"\r\n    >\r\n      <el-form\r\n        ref=\"createFormRef\"\r\n        :model=\"createForm\"\r\n        :rules=\"createRules\"\r\n        label-width=\"100px\"\r\n      >\r\n        <el-form-item label=\"小组名称\" prop=\"group_name\">\r\n          <el-input v-model=\"createForm.group_name\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"选题\" prop=\"group_title\">\r\n          <el-input v-model=\"createForm.group_title\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"简介\" prop=\"group_info\">\r\n          <el-input \r\n            v-model=\"createForm.group_info\" \r\n            type=\"textarea\" \r\n            :rows=\"4\"\r\n          />\r\n        </el-form-item>\r\n        <el-form-item label=\"年级\" prop=\"gde\">\r\n          <el-select v-model=\"createForm.gde\" style=\"width: 100%\">\r\n            <el-option\r\n              v-for=\"grade in grades\"\r\n              :key=\"grade.gde_id\"\r\n              :label=\"`${grade.gde_value}级`\"\r\n              :value=\"grade.gde_value\"\r\n            />\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"专业\" prop=\"mjr\">\r\n          <el-select v-model=\"createForm.mjr\" style=\"width: 100%\">\r\n            <el-option\r\n              v-for=\"major in majors\"\r\n              :key=\"major.mjr_id\"\r\n              :label=\"major.mjr_name\"\r\n              :value=\"major.mjr_name\"\r\n            />\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"组长\" prop=\"leader\">\r\n          <el-select \r\n            v-model=\"createForm.leader\"\r\n            filterable\r\n            remote\r\n            :remote-method=\"searchStudents\"\r\n            :loading=\"searchingStudents\"\r\n            style=\"width: 100%\"\r\n          >\r\n            <el-option\r\n              v-for=\"student in availableStudents\"\r\n              :key=\"student.stu_id\"\r\n              :label=\"`${student.stu_name}(${student.stu_num})`\"\r\n              :value=\"student.stu_id\"\r\n            />\r\n          </el-select>\r\n        </el-form-item>\r\n      </el-form>\r\n      <template #footer>\r\n        <el-button @click=\"createDialogVisible = false\">取消</el-button>\r\n        <el-button \r\n          type=\"primary\" \r\n          @click=\"submitCreateGroup\"\r\n          :loading=\"submitting\"\r\n        >\r\n          确定\r\n        </el-button>\r\n      </template>\r\n    </el-dialog>\r\n\r\n    <!-- 管理成员对话框 -->\r\n    <el-dialog\r\n      v-model=\"memberDialogVisible\"\r\n      :title=\"`管理成员 - ${currentGroup?.group_name || ''}`\"\r\n      width=\"60%\"\r\n    >\r\n      <div class=\"member-dialog\">\r\n        <div class=\"current-members\">\r\n          <h3>当前成员</h3>\r\n          <el-table\r\n            :data=\"groupMembers\"\r\n            stripe\r\n            v-loading=\"loadingMembers\"\r\n            style=\"width: 100%\"\r\n          >\r\n            <el-table-column prop=\"stu_num\" label=\"学号\" width=\"120\" />\r\n            <el-table-column prop=\"stu_name\" label=\"姓名\" width=\"100\" />\r\n            <el-table-column prop=\"stu_cls\" label=\"班级\" width=\"80\" />\r\n            <el-table-column label=\"身份\" width=\"100\">\r\n              <template #default=\"{ row }\">\r\n                <el-tag :type=\"row.is_leader ? 'success' : ''\">\r\n                  {{ row.is_leader ? '组长' : '成员' }}\r\n                </el-tag>\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column label=\"操作\" width=\"100\">\r\n              <template #default=\"{ row }\">\r\n                <el-button \r\n                  type=\"danger\" \r\n                  link\r\n                  @click=\"handleRemoveMember(row)\"\r\n                  :disabled=\"row.is_leader\"\r\n                >\r\n                  移除\r\n                </el-button>\r\n              </template>\r\n            </el-table-column>\r\n          </el-table>\r\n        </div>\r\n\r\n        <div class=\"add-members\" v-if=\"currentGroup\">\r\n          <h3>添加成员</h3>\r\n          <el-form :inline=\"true\">\r\n            <el-form-item>\r\n              <el-select\r\n                v-model=\"selectedStudents\"\r\n                multiple\r\n                filterable\r\n                remote\r\n                :remote-method=\"searchStudents\"\r\n                :loading=\"searchingStudents\"\r\n                style=\"width: 400px\"\r\n                placeholder=\"搜索学生\"\r\n              >\r\n                <el-option\r\n                  v-for=\"student in availableStudents\"\r\n                  :key=\"student.stu_id\"\r\n                  :label=\"`${student.stu_name}(${student.stu_num})`\"\r\n                  :value=\"student.stu_id\"\r\n                />\r\n              </el-select>\r\n            </el-form-item>\r\n            <el-form-item>\r\n              <el-button \r\n                type=\"primary\"\r\n                @click=\"handleAddMembers\"\r\n                :disabled=\"!selectedStudents.length\"\r\n                :loading=\"addingMembers\"\r\n              >\r\n                添加选中学生\r\n              </el-button>\r\n            </el-form-item>\r\n          </el-form>\r\n        </div>\r\n      </div>\r\n    </el-dialog>\r\n\r\n    <!-- 管理导师对话框 -->\r\n    <el-dialog\r\n      v-model=\"teacherDialogVisible\"\r\n      :title=\"`管理导师 - ${currentGroup?.group_name || ''}`\"\r\n      width=\"60%\"\r\n    >\r\n      <div class=\"teacher-dialog\">\r\n        <div class=\"current-teachers\">\r\n          <h3>当前导师</h3>\r\n          <el-table\r\n            :data=\"groupTeachers\"\r\n            stripe\r\n            v-loading=\"loadingTeachers\"\r\n            style=\"width: 100%\"\r\n          >\r\n            <el-table-column prop=\"tea_name\" label=\"姓名\" width=\"120\" />\r\n            <el-table-column label=\"所属专业\">\r\n              <template #default=\"{ row }\">\r\n                <el-tag \r\n                  v-for=\"major in row.tea_mjr\" \r\n                  :key=\"major\"\r\n                  style=\"margin-right: 4px\"\r\n                >\r\n                  {{ major }}\r\n                </el-tag>\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column label=\"操作\" width=\"100\">\r\n              <template #default=\"{ row }\">\r\n                <el-button \r\n                  type=\"danger\" \r\n                  link\r\n                  @click=\"handleRemoveTeacher(row)\"\r\n                >\r\n                  移除\r\n                </el-button>\r\n              </template>\r\n            </el-table-column>\r\n          </el-table>\r\n        </div>\r\n\r\n        <div class=\"add-teacher\" v-if=\"currentGroup\">\r\n          <h3>添加导师</h3>\r\n          <el-form :inline=\"true\">\r\n            <el-form-item>\r\n              <el-select\r\n                v-model=\"selectedTeacher\"\r\n                filterable\r\n                style=\"width: 300px\"\r\n                placeholder=\"选择导师\"\r\n              >\r\n                <el-option\r\n                  v-for=\"teacher in availableTeachers\"\r\n                  :key=\"teacher.tea_id\"\r\n                  :label=\"teacher.tea_name\"\r\n                  :value=\"teacher.tea_id\"\r\n                />\r\n              </el-select>\r\n            </el-form-item>\r\n            <el-form-item>\r\n              <el-button \r\n                type=\"primary\"\r\n                @click=\"handleAddTeacher\"\r\n                :disabled=\"!selectedTeacher\"\r\n                :loading=\"addingTeacher\"\r\n              >\r\n                添加导师\r\n              </el-button>\r\n            </el-form-item>\r\n          </el-form>\r\n        </div>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, reactive, onMounted, computed } from 'vue'\r\nimport { ElMessage, ElMessageBox } from 'element-plus'\r\nimport { Search, Refresh, Plus } from '@element-plus/icons-vue'\r\nimport { getAllGrades } from '@/api/grade'\r\nimport { getAllMajors } from '@/api/major'\r\nimport { getTeachersByMajor } from '@/api/group'\r\nimport { getUnsetStudents } from '@/api/student'\r\nimport {\r\n  searchGroups,\r\n  getUnselectedGroups,\r\n  getNotFullGroups,\r\n  getGroupsWithoutTeacher,\r\n  createGroup,\r\n  createGroupWithLeader,\r\n  deleteGroup,\r\n  getGroupStudents,\r\n  getGroupTeacher,\r\n  addGroupMembers,\r\n  removeGroupMember,\r\n  addTeacherToGroup,\r\n  removeTeacherFromGroup,\r\n  getGroupsWithTeacher\r\n} from '@/api/group'\r\nimport { useRoute } from 'vue-router'\r\n\r\nconst route = useRoute()\r\n\r\n// 基础数据\r\nconst grades = ref([])\r\nconst majors = ref([])\r\nconst groups = ref([])\r\nconst loading = ref(false)\r\n\r\n// 筛选表单\r\nconst filterForm = reactive({\r\n  grade: '',\r\n  major: '',\r\n  filterType: '',\r\n  keyword: ''\r\n})\r\n\r\n// 创建小组相关\r\nconst createDialogVisible = ref(false)\r\nconst createFormRef = ref(null)\r\nconst submitting = ref(false)\r\nconst createForm = reactive({\r\n  group_name: '',\r\n  group_title: '',\r\n  group_info: '',\r\n  gde: '',\r\n  mjr: '',\r\n  leader: null\r\n})\r\n\r\nconst createRules = {\r\n  group_name: [\r\n    { required: true, message: '请输入小组名称', trigger: 'blur' }\r\n  ],\r\n  group_title: [\r\n    { required: true, message: '请输入选题', trigger: 'blur' }\r\n  ],\r\n  gde: [\r\n    { required: true, message: '请选择年级', trigger: 'change' }\r\n  ],\r\n  mjr: [\r\n    { required: true, message: '请选择专业', trigger: 'change' }\r\n  ]\r\n}\r\n\r\n// 成员管理相关\r\nconst memberDialogVisible = ref(false)\r\nconst currentGroup = ref(null)\r\nconst groupMembers = ref([])\r\nconst loadingMembers = ref(false)\r\nconst selectedStudents = ref([])\r\nconst availableStudents = ref([])\r\nconst searchingStudents = ref(false)\r\nconst addingMembers = ref(false)\r\n\r\n// 导师管理相关\r\nconst teacherDialogVisible = ref(false)\r\nconst groupTeachers = ref([])\r\nconst loadingTeachers = ref(false)\r\nconst selectedTeacher = ref(null)\r\nconst availableTeachers = ref([])\r\nconst addingTeacher = ref(false)\r\n\r\n// 分页相关\r\nconst currentPage = ref(1)\r\nconst pageSize = ref(10)\r\n\r\n// 计算当前页的数据\r\nconst currentPageGroups = computed(() => {\r\n  let filteredGroups = groups.value\r\n  if (filterForm.keyword) {\r\n    const keyword = filterForm.keyword.toLowerCase()\r\n    filteredGroups = groups.value.filter(group => \r\n      group.group_name.toLowerCase().includes(keyword) || \r\n      group.group_title.toLowerCase().includes(keyword)\r\n    )\r\n  }\r\n  \r\n  const start = (currentPage.value - 1) * pageSize.value\r\n  const end = start + pageSize.value\r\n  return filteredGroups.slice(start, end)\r\n})\r\n\r\n// 获取基础数据\r\nconst getInitialData = async () => {\r\n  try {\r\n    const [gradesData, majorsData] = await Promise.all([\r\n      getAllGrades(),\r\n      getAllMajors()\r\n    ])\r\n    grades.value = gradesData\r\n    majors.value = majorsData\r\n  } catch (error) {\r\n    ElMessage.error('获取基础数据失败')\r\n  }\r\n}\r\n\r\n// 搜索小组\r\nconst handleSearch = async () => {\r\n  if (!filterForm.grade || !filterForm.major) {\r\n    ElMessage.warning('请选择年级和专业')\r\n    return\r\n  }\r\n\r\n  currentPage.value = 1\r\n  loading.value = true\r\n  try {\r\n    let result\r\n    switch (filterForm.filterType) {\r\n      case 'unselected':\r\n        result = await getUnselectedGroups(filterForm.grade, filterForm.major)\r\n        break\r\n      case 'not-full':\r\n        result = await getNotFullGroups(filterForm.grade, filterForm.major)\r\n        break\r\n      case 'without-teacher':\r\n        result = await getGroupsWithoutTeacher(filterForm.grade, filterForm.major)\r\n        break\r\n      case 'with-teacher':\r\n        result = await getGroupsWithTeacher(filterForm.grade, filterForm.major)\r\n        break\r\n      default:\r\n        result = await searchGroups(filterForm.grade, filterForm.major)\r\n    }\r\n    groups.value = result\r\n  } catch (error) {\r\n    ElMessage.error('获取小组数据失败')\r\n  } finally {\r\n    loading.value = false\r\n  }\r\n}\r\n\r\n// 重置筛选\r\nconst resetFilter = () => {\r\n  filterForm.grade = ''\r\n  filterForm.major = ''\r\n  filterForm.filterType = ''\r\n  filterForm.keyword = ''\r\n  groups.value = []\r\n  currentPage.value = 1\r\n}\r\n\r\n// 筛选类型变化\r\nconst handleFilterTypeChange = () => {\r\n  handleSearch()\r\n}\r\n\r\n// 创建小组\r\nconst handleCreateGroup = () => {\r\n  createForm.gde = filterForm.grade\r\n  createForm.mjr = filterForm.major\r\n  createDialogVisible.value = true\r\n}\r\n\r\n// 提交创建小组\r\nconst submitCreateGroup = async () => {\r\n  if (!createFormRef.value) return\r\n  \r\n  try {\r\n    await createFormRef.value.validate()\r\n    submitting.value = true\r\n    \r\n    if (createForm.leader) {\r\n      await createGroupWithLeader(createForm.leader, {\r\n        group_name: createForm.group_name,\r\n        group_title: createForm.group_title,\r\n        group_info: createForm.group_info,\r\n        gde: createForm.gde,\r\n        mjr: createForm.mjr\r\n      })\r\n    } else {\r\n      await createGroup({\r\n        group_name: createForm.group_name,\r\n        group_title: createForm.group_title,\r\n        group_info: createForm.group_info,\r\n        gde: createForm.gde,\r\n        mjr: createForm.mjr\r\n      })\r\n    }\r\n    \r\n    ElMessage.success('创建成功')\r\n    createDialogVisible.value = false\r\n    handleSearch()\r\n  } catch (error) {\r\n    ElMessage.error('创建失败')\r\n  } finally {\r\n    submitting.value = false\r\n  }\r\n}\r\n\r\n// 删除小组\r\nconst handleDeleteGroup = async (row) => {\r\n  try {\r\n    await ElMessageBox.confirm(\r\n      `确定要删除小组 ${row.group_name} ？此操作不可恢复！`,\r\n      '警告',\r\n      {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }\r\n    )\r\n    \r\n    await deleteGroup(row.group_id)\r\n    ElMessage.success('删除成功')\r\n    handleSearch()\r\n  } catch (error) {\r\n    if (error !== 'cancel') {\r\n      ElMessage.error('删除失败')\r\n    }\r\n  }\r\n}\r\n\r\n// 管理成员\r\nconst handleManageMembers = async (row) => {\r\n  currentGroup.value = row\r\n  memberDialogVisible.value = true\r\n  loadingMembers.value = true\r\n  selectedStudents.value = []\r\n  \r\n  try {\r\n    const [members, unsetStudents] = await Promise.all([\r\n      getGroupStudents(row.group_id),\r\n      getUnsetStudents(row.grade, row.major)\r\n    ])\r\n    groupMembers.value = members\r\n    availableStudents.value = unsetStudents\r\n  } catch (error) {\r\n    ElMessage.error('获取成员信息失败')\r\n  } finally {\r\n    loadingMembers.value = false\r\n  }\r\n}\r\n\r\n// 搜索可用学生\r\nconst searchStudents = async (query) => {\r\n  try {\r\n    searchingStudents.value = true\r\n    // 创建小组时使用表单的年级专业\r\n    const grade = createForm.gde || currentGroup.value?.grade\r\n    const major = createForm.mjr || currentGroup.value?.major\r\n    \r\n    if (!grade || !major) {\r\n      ElMessage.warning('请先选择年级和专业')\r\n      return\r\n    }\r\n    \r\n    // 获取未分组学生\r\n    const students = await getUnsetStudents(grade, major)\r\n    \r\n    // 如果有搜索关键词就过滤\r\n    if (query) {\r\n      availableStudents.value = students.filter(student => \r\n        student.stu_num.includes(query) || \r\n        student.stu_name.includes(query)\r\n      )\r\n    } else {\r\n      availableStudents.value = students\r\n    }\r\n  } catch (error) {\r\n    console.error('获取未分组学生失败:', error)\r\n    ElMessage.error('获取未分组学生失败')\r\n  } finally {\r\n    searchingStudents.value = false\r\n  }\r\n}\r\n\r\n// 添加成员\r\nconst handleAddMembers = async () => {\r\n  if (!selectedStudents.value.length) return\r\n  \r\n  addingMembers.value = true\r\n  try {\r\n    await addGroupMembers(currentGroup.value.group_id, selectedStudents.value)\r\n    ElMessage.success('添加成功')\r\n    selectedStudents.value = []\r\n    handleManageMembers(currentGroup.value)\r\n  } catch (error) {\r\n    ElMessage.error('添加失败')\r\n  } finally {\r\n    addingMembers.value = false\r\n  }\r\n}\r\n\r\n// 移除成员\r\nconst handleRemoveMember = async (member) => {\r\n  try {\r\n    await ElMessageBox.confirm(\r\n      `确定要移除成员 ${member.stu_name} 吗？`,\r\n      '提示',\r\n      {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }\r\n    )\r\n    \r\n    await removeGroupMember(currentGroup.value.group_id, member.stu_id)\r\n    ElMessage.success('移除成功')\r\n    handleManageMembers(currentGroup.value)\r\n  } catch (error) {\r\n    if (error !== 'cancel') {\r\n      ElMessage.error('移除失败')\r\n    }\r\n  }\r\n}\r\n\r\n// 管理导师\r\nconst handleManageTeachers = async (row) => {\r\n  currentGroup.value = row\r\n  teacherDialogVisible.value = true\r\n  loadingTeachers.value = true\r\n  \r\n  try {\r\n    const [teachers, availableTeachersData] = await Promise.all([\r\n      getGroupTeacher(row.group_id),\r\n      getTeachersByMajor(row.major)\r\n    ])\r\n    \r\n    console.log('Group teachers response:', teachers)\r\n    console.log('Available teachers response:', availableTeachersData)\r\n    \r\n    groupTeachers.value = teachers ? (Array.isArray(teachers) ? teachers : [teachers]) : []\r\n    \r\n    availableTeachers.value = Array.isArray(availableTeachersData) ? availableTeachersData : []\r\n    \r\n    // 从可选导师列表中过滤掉已经在组内的导师\r\n    const existingTeacherIds = groupTeachers.value.map(t => t.tea_id)\r\n    availableTeachers.value = availableTeachers.value.filter(\r\n      t => !existingTeacherIds.includes(t.tea_id)\r\n    )\r\n  } catch (error) {\r\n    console.error('获取导师信息失败:', error)\r\n    ElMessage.error('获取导师信息失败')\r\n  } finally {\r\n    loadingTeachers.value = false\r\n  }\r\n}\r\n\r\n// 添加导师\r\nconst handleAddTeacher = async () => {\r\n  if (!selectedTeacher.value) return\r\n  \r\n  addingTeacher.value = true\r\n  try {\r\n    await addTeacherToGroup(currentGroup.value.group_id, selectedTeacher.value)\r\n    ElMessage.success('添加成功')\r\n    selectedTeacher.value = null\r\n    handleManageTeachers(currentGroup.value)\r\n  } catch (error) {\r\n    ElMessage.error('添加失败')\r\n  } finally {\r\n    addingTeacher.value = false\r\n  }\r\n}\r\n\r\n// 移除导师\r\nconst handleRemoveTeacher = async (teacher) => {\r\n  try {\r\n    await ElMessageBox.confirm(\r\n      `确定要移除导师 ${teacher.tea_name} 吗？`,\r\n      '提示',\r\n      {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }\r\n    )\r\n    \r\n    await removeTeacherFromGroup(currentGroup.value.group_id, teacher.tea_id)\r\n    ElMessage.success('移除成功')\r\n    handleManageTeachers(currentGroup.value)\r\n  } catch (error) {\r\n    if (error !== 'cancel') {\r\n      ElMessage.error('移除失败')\r\n    }\r\n  }\r\n}\r\n\r\n// 刷新数据\r\nconst refreshData = () => {\r\n  handleSearch()\r\n}\r\n\r\n// 处理分页大小变化\r\nconst handleSizeChange = (val) => {\r\n  pageSize.value = val\r\n  currentPage.value = 1\r\n}\r\n\r\n// 处理页码变化\r\nconst handleCurrentChange = (val) => {\r\n  currentPage.value = val\r\n}\r\n\r\n// 添加计算属性用于过滤后的总数\r\nconst filteredGroups = computed(() => {\r\n  if (!filterForm.keyword) return groups.value\r\n  const keyword = filterForm.keyword.toLowerCase()\r\n  return groups.value.filter(group => \r\n    group.group_name.toLowerCase().includes(keyword) || \r\n    group.group_title.toLowerCase().includes(keyword)\r\n  )\r\n})\r\n\r\n// 从路由参数初始化筛选\r\nconst initFilterFromQuery = () => {\r\n  const { grade, major, type } = route.query\r\n  if (grade) filterForm.grade = grade\r\n  if (major) filterForm.major = major\r\n  if (type) filterForm.filterType = type\r\n  \r\n  if (grade && major) {\r\n    handleSearch()\r\n  }\r\n}\r\n\r\nonMounted(() => {\r\n  getInitialData()\r\n  initFilterFromQuery()\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.group-manage {\r\n  .page-header {\r\n    margin-bottom: 20px;\r\n    padding: 20px;\r\n    background: #fff;\r\n    border-radius: 4px;\r\n    box-shadow: 0 2px 12px 0 rgba(0,0,0,0.1);\r\n\r\n    h2 {\r\n      margin: 0;\r\n      color: #1890ff;\r\n      font-size: 24px;\r\n      margin-bottom: 8px;\r\n    }\r\n\r\n    .header-desc {\r\n      color: #909399;\r\n      font-size: 14px;\r\n    }\r\n  }\r\n\r\n  .filter-section {\r\n    margin-bottom: 20px;\r\n    padding: 20px;\r\n    background: #fff;\r\n    border-radius: 4px;\r\n    box-shadow: 0 2px 12px 0 rgba(0,0,0,0.1);\r\n\r\n    .filter-form {\r\n      display: flex;\r\n      flex-direction: column;\r\n      gap: 15px;\r\n\r\n      .filter-main {\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        gap: 10px;\r\n        align-items: center;\r\n\r\n        :deep(.el-input) {\r\n          .el-input__wrapper {\r\n            padding-left: 8px;\r\n          }\r\n          .el-input__prefix {\r\n            margin-right: 4px;\r\n          }\r\n        }\r\n      }\r\n\r\n      .filter-actions {\r\n        display: flex;\r\n        justify-content: flex-end;\r\n        gap: 10px;\r\n      }\r\n    }\r\n  }\r\n\r\n  :deep(.el-table) {\r\n    border-radius: 8px;\r\n    overflow: hidden;\r\n    \r\n    .el-table__header-wrapper {\r\n      th {\r\n        border-bottom: 2px solid #ebeef5;\r\n      }\r\n    }\r\n    \r\n    .el-table__body-wrapper {\r\n      td {\r\n        border-bottom: 1px solid #ebeef5;\r\n      }\r\n    }\r\n    \r\n    .el-table__row:hover > td {\r\n      background: #f5f7fa !important;\r\n    }\r\n  }\r\n\r\n  .member-dialog,\r\n  .teacher-dialog {\r\n    h3 {\r\n      margin: 0 0 15px;\r\n      color: #1890ff;\r\n    }\r\n\r\n    .current-members,\r\n    .current-teachers {\r\n      margin-bottom: 20px;\r\n    }\r\n    \r\n\r\n    .add-members,\r\n    .add-teacher {\r\n      padding-top: 20px;\r\n      border-top: 1px solid #ebeef5;\r\n    }\r\n  }\r\n\r\n  .pagination {\r\n    margin-top: 20px;\r\n    display: flex;\r\n    justify-content: flex-end;\r\n  }\r\n}\r\n</style> ","import script from \"./group-manage.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./group-manage.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./group-manage.vue?vue&type=style&index=0&id=3d1beae1&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-3d1beae1\"]])\n\nexport default __exports__"],"names":["exports","sfc","props","target","__vccOpts","key","val","getAllGrades","request","url","method","getAllMajors","getUnsetStudents","gde","mjr","params","updateStudentInfo","data","updateStudentPassword","id","newPassword","getAllStudents","updateStudentInfoByAdmin","resetStudentPassword","deleteStudent","addStudent","bulkCreateStudents","route","useRoute","grades","ref","majors","groups","loading","filterForm","reactive","grade","major","filterType","keyword","createDialogVisible","createFormRef","submitting","createForm","group_name","group_title","group_info","leader","createRules","required","message","trigger","memberDialogVisible","currentGroup","groupMembers","loadingMembers","selectedStudents","availableStudents","searchingStudents","addingMembers","teacherDialogVisible","groupTeachers","loadingTeachers","selectedTeacher","availableTeachers","addingTeacher","currentPage","pageSize","currentPageGroups","computed","filteredGroups","value","toLowerCase","filter","group","includes","start","end","slice","getInitialData","async","gradesData","majorsData","Promise","all","error","ElMessage","handleSearch","result","getUnselectedGroups","getNotFullGroups","getGroupsWithoutTeacher","getGroupsWithTeacher","searchGroups","warning","resetFilter","handleFilterTypeChange","handleCreateGroup","submitCreateGroup","validate","createGroupWithLeader","createGroup","success","handleDeleteGroup","ElMessageBox","confirm","row","confirmButtonText","cancelButtonText","type","deleteGroup","group_id","handleManageMembers","members","unsetStudents","getGroupStudents","searchStudents","students","query","student","stu_num","stu_name","console","handleAddMembers","length","addGroupMembers","handleRemoveMember","member","removeGroupMember","stu_id","handleManageTeachers","teachers","availableTeachersData","getGroupTeacher","getTeachersByMajor","log","Array","isArray","existingTeacherIds","map","t","tea_id","handleAddTeacher","addTeacherToGroup","handleRemoveTeacher","teacher","tea_name","removeTeacherFromGroup","refreshData","handleSizeChange","handleCurrentChange","initFilterFromQuery","onMounted","__exports__"],"sourceRoot":""}