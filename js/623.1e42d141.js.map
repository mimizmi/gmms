{"version":3,"file":"js/623.1e42d141.js","mappings":"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","sources":["webpack://gdmu-mentor-selection/./src/views/admin/admin-dashboard.vue","webpack://gdmu-mentor-selection/./src/views/admin/admin-dashboard.vue?8a99"],"sourcesContent":["<template>\r\n  <div class=\"dashboard\">\r\n    \r\n    <!-- 内容区域 -->\r\n    <el-card class=\"content-card\">\r\n      <el-tabs v-model=\"activeTab\">\r\n        <!-- 分配管理 tab -->\r\n        <el-tab-pane label=\"分配管理\" name=\"allocation\">\r\n          <!-- 分配管理卡片 -->\r\n          <el-card class=\"stats-card\">\r\n            <template #header>\r\n              <div class=\"card-header\">\r\n                <span class=\"title\">\r\n                  <el-icon><Operation /></el-icon>\r\n                  分配管理\r\n                </span>\r\n              </div>\r\n            </template>\r\n            \r\n            <div class=\"allocation-content\">\r\n              <!-- 分配操作区域 -->\r\n              <div class=\"allocation-form\">\r\n                <el-form :inline=\"true\">\r\n                  <el-form-item label=\"年级\" style=\"width: 200px\">\r\n                    <el-select v-model=\"allocForm.grade\" placeholder=\"选择年级\" style=\"width: 100%\">\r\n                      <el-option\r\n                        v-for=\"grade in grades\"\r\n                        :key=\"grade.gde_id\"\r\n                        :label=\"`${grade.gde_value}级`\"\r\n                        :value=\"grade.gde_id\"\r\n                      />\r\n                    </el-select>\r\n                  </el-form-item>\r\n                  <el-form-item label=\"专业\" style=\"width: 300px\">\r\n                    <el-select v-model=\"allocForm.major\" placeholder=\"选择专业\" style=\"width: 100%\">\r\n                      <el-option\r\n                        v-for=\"major in majors\"\r\n                        :key=\"major.mjr_id\"\r\n                        :label=\"major.mjr_name\"\r\n                        :value=\"major.mjr_id\"\r\n                      />\r\n                    </el-select>\r\n                  </el-form-item>\r\n                  <el-form-item>\r\n                    <el-button \r\n                      type=\"primary\" \r\n                      @click=\"handleAutoAllocation\"\r\n                      :loading=\"allocating\"\r\n                    >\r\n                      自动分配\r\n                    </el-button>\r\n                    <el-button \r\n                      type=\"success\" \r\n                      @click=\"handleExport\"\r\n                      :disabled=\"!allocationResults.length\"\r\n                    >\r\n                      <el-icon><Download /></el-icon>\r\n                      导出结果\r\n                    </el-button>\r\n                  </el-form-item>\r\n                </el-form>\r\n              </div>\r\n\r\n              <!-- 分配结果表格 -->\r\n              <div class=\"allocation-results\" v-if=\"allocationResults.length\">\r\n                <!-- 缩放控制 -->\r\n                <div class=\"table-controls\">\r\n                  <el-button-group>\r\n                    <el-button \r\n                      :type=\"isCollapsed ? '' : 'primary'\"\r\n                      @click=\"isCollapsed = false\"\r\n                    >\r\n                      展开\r\n                    </el-button>\r\n                    <el-button \r\n                      :type=\"isCollapsed ? 'primary' : ''\"\r\n                      @click=\"isCollapsed = true\"\r\n                    >\r\n                      收起\r\n                    </el-button>\r\n                  </el-button-group>\r\n                </div>\r\n\r\n                <!-- 表格区域 -->\r\n                <el-table \r\n                  :data=\"validResults\"\r\n                  stripe \r\n                  border\r\n                  :max-height=\"isCollapsed ? '300' : '600'\"\r\n                >\r\n                  <el-table-column prop=\"group_name\" label=\"小组名称\" />\r\n                  <el-table-column prop=\"group_title\" label=\"选题\" show-overflow-tooltip />\r\n                  <el-table-column label=\"组长\">\r\n                    <template #default=\"{ row }\">\r\n                      {{ getLeaderName(row.details.studentsList) }}\r\n                    </template>\r\n                  </el-table-column>\r\n                  <el-table-column label=\"成员数\">\r\n                    <template #default=\"{ row }\">\r\n                      {{ row.details.studentsList.length }}人\r\n                    </template>\r\n                  </el-table-column>\r\n                  <el-table-column label=\"指导教师\">\r\n                    <template #default=\"{ row }\">\r\n                      {{ row.details.teacher?.tea_name }}\r\n                    </template>\r\n                  </el-table-column>\r\n                </el-table>\r\n              </div>\r\n            </div>\r\n          </el-card>\r\n        </el-tab-pane>\r\n\r\n        <!-- 未分组统计 tab -->\r\n        <el-tab-pane label=\"未分组学生统计\" name=\"unset\">\r\n          <!-- 未分组学生统计卡片 -->\r\n          <el-card class=\"stats-card\">\r\n            <template #header>\r\n              <div class=\"card-header\">\r\n                <span class=\"title\">\r\n                  <el-icon><DataLine /></el-icon>\r\n                  未分组学生统计\r\n                </span>\r\n                <el-button type=\"primary\" link @click=\"refreshStats\">\r\n                  <el-icon><Refresh /></el-icon>\r\n                  刷新\r\n                </el-button>\r\n              </div>\r\n            </template>\r\n\r\n            <div class=\"stats-content full-width\" v-loading=\"loading\">\r\n              <!-- 年级选择器 -->\r\n              <div class=\"filter-area\">\r\n                <el-select \r\n                  v-model=\"selectedGrade\"\r\n                  placeholder=\"选择年级\"\r\n                  clearable\r\n                  @change=\"handleGradeChange\"\r\n                >\r\n                  <el-option\r\n                    v-for=\"grade in grades\"\r\n                    :key=\"grade.gde_id\"\r\n                    :label=\"`${grade.gde_value}级`\"\r\n                    :value=\"grade.gde_value\"\r\n                  />\r\n                </el-select>\r\n              </div>\r\n\r\n              <!-- 统计表格 -->\r\n              <el-table \r\n                :data=\"statsData\" \r\n                stripe \r\n                class=\"full-width-table\"\r\n              >\r\n                <el-table-column prop=\"major\" label=\"专业\" width=\"40%\" />\r\n                <el-table-column prop=\"unsetCount\" label=\"未分组人数\" width=\"30%\">\r\n                  <template #default=\"{ row }\">\r\n                    <el-tag \r\n                      :type=\"row.unsetCount > 0 ? 'danger' : 'success'\"\r\n                      effect=\"dark\"\r\n                    >\r\n                      {{ row.unsetCount }} 人\r\n                    </el-tag>\r\n                  </template>\r\n                </el-table-column>\r\n                <el-table-column label=\"操作\" width=\"30%\">\r\n                  <template #default=\"{ row }\">\r\n                    <el-button \r\n                      type=\"primary\" \r\n                      link \r\n                      @click=\"viewUnsetStudents(row)\"\r\n                      :disabled=\"row.unsetCount === 0\"\r\n                    >\r\n                      查看名单\r\n                    </el-button>\r\n                  </template>\r\n                </el-table-column>\r\n              </el-table>\r\n            </div>\r\n          </el-card>\r\n        </el-tab-pane>\r\n\r\n        <!-- 小组统计 tab -->\r\n        <el-tab-pane label=\"小组情况统计\" name=\"groups\">\r\n          <!-- 小组情况统计卡片 -->\r\n          <el-card class=\"stats-card\">\r\n            <template #header>\r\n              <div class=\"card-header\">\r\n                <span class=\"title\">\r\n                  <el-icon><Connection /></el-icon>\r\n                  小组情况统计\r\n                </span>\r\n                <el-button type=\"primary\" link @click=\"refreshGroupStats\">\r\n                  <el-icon><Refresh /></el-icon>\r\n                  刷新\r\n                </el-button>\r\n              </div>\r\n            </template>\r\n            \r\n            <div class=\"stats-content full-width\" v-loading=\"groupLoading\">\r\n              <!-- 年级选择器 -->\r\n              <div class=\"filter-area\">\r\n                <el-select \r\n                  v-model=\"selectedGradeForGroup\"\r\n                  placeholder=\"选择年级\"\r\n                  clearable\r\n                  @change=\"handleGradeChangeForGroup\"\r\n                >\r\n                  <el-option\r\n                    v-for=\"grade in grades\"\r\n                    :key=\"grade.gde_id\"\r\n                    :label=\"`${grade.gde_value}级`\"\r\n                    :value=\"grade.gde_value\"\r\n                  />\r\n                </el-select>\r\n              </div>\r\n              \r\n              <!-- 统计表格 -->\r\n              <el-table \r\n                :data=\"groupStatsData\" \r\n                stripe \r\n                class=\"full-width-table\"\r\n              >\r\n                <el-table-column prop=\"major\" label=\"专业\" width=\"25%\" />\r\n                <el-table-column label=\"未预选小组\" width=\"18%\">\r\n                  <template #default=\"{ row }\">\r\n                    <el-tag \r\n                      :type=\"row.unselectedCount > 0 ? 'danger' : 'success'\"\r\n                      effect=\"dark\"\r\n                    >\r\n                      {{ row.unselectedCount }} 组\r\n                    </el-tag>\r\n                    <el-button \r\n                      type=\"primary\" \r\n                      link \r\n                      @click=\"viewGroups(row.major, 'unselected')\"\r\n                      :disabled=\"row.unselectedCount === 0\"\r\n                    >\r\n                      查看\r\n                    </el-button>\r\n                  </template>\r\n                </el-table-column>\r\n                <el-table-column label=\"未满人小组\" width=\"18%\">\r\n                  <template #default=\"{ row }\">\r\n                    <el-tag \r\n                      :type=\"row.notFullCount > 0 ? 'warning' : 'success'\"\r\n                      effect=\"dark\"\r\n                    >\r\n                      {{ row.notFullCount }} 组\r\n                    </el-tag>\r\n                    <el-button \r\n                      type=\"primary\" \r\n                      link \r\n                      @click=\"viewGroups(row.major, 'not-full')\"\r\n                      :disabled=\"row.notFullCount === 0\"\r\n                    >\r\n                      查看\r\n                    </el-button>\r\n                  </template>\r\n                </el-table-column>\r\n                <el-table-column label=\"未分配导师小组\" width=\"20%\">\r\n                  <template #default=\"{ row }\">\r\n                    <el-tag \r\n                      :type=\"row.withoutTeacherCount > 0 ? 'warning' : 'success'\"\r\n                      effect=\"dark\"\r\n                    >\r\n                      {{ row.withoutTeacherCount }} 组\r\n                    </el-tag>\r\n                    <el-button \r\n                      type=\"primary\" \r\n                      link \r\n                      @click=\"viewGroups(row.major, 'without-teacher')\"\r\n                      :disabled=\"row.withoutTeacherCount === 0\"\r\n                    >\r\n                      查看\r\n                    </el-button>\r\n                  </template>\r\n                </el-table-column>\r\n                <el-table-column label=\"已分配导师小组\" width=\"19%\">\r\n                  <template #default=\"{ row }\">\r\n                    <el-tag \r\n                      :type=\"row.withTeacherCount > 0 ? 'success' : 'info'\"\r\n                      effect=\"dark\"\r\n                    >\r\n                      {{ row.withTeacherCount }} 组\r\n                    </el-tag>\r\n                    <el-button \r\n                      type=\"primary\" \r\n                      link \r\n                      @click=\"viewGroups(row.major, 'with-teacher')\"\r\n                      :disabled=\"row.withTeacherCount === 0\"\r\n                    >\r\n                      查看\r\n                    </el-button>\r\n                  </template>\r\n                </el-table-column>\r\n              </el-table>\r\n            </div>\r\n          </el-card>\r\n        </el-tab-pane>\r\n      </el-tabs>\r\n    </el-card>\r\n\r\n    <!-- 未分组学生名单对话框 -->\r\n    <el-dialog\r\n      v-model=\"dialogVisible\"\r\n      :title=\"`${selectedGrade}级${currentMajor} - 未分组学生名单`\"\r\n      width=\"70%\"\r\n    >\r\n      <div class=\"dialog-content\">\r\n        <!-- 导出按钮 -->\r\n        <div class=\"dialog-header\">\r\n          <el-button \r\n            type=\"primary\"\r\n            @click=\"exportToExcel\"\r\n            :loading=\"exportLoading\"\r\n          >\r\n            <el-icon><Download /></el-icon>\r\n            导出名单\r\n          </el-button>\r\n        </div>\r\n\r\n        <el-table \r\n          :data=\"currentPageStudents\" \r\n          stripe\r\n          v-loading=\"detailLoading\"\r\n        >\r\n          <el-table-column prop=\"stu_num\" label=\"学号\" />\r\n          <el-table-column prop=\"stu_name\" label=\"姓名\" />\r\n          <el-table-column prop=\"stu_cls\" label=\"班级\" />\r\n          <el-table-column prop=\"stu_phone\" label=\"联系方式\" />\r\n        </el-table>\r\n\r\n        <!-- 分页 -->\r\n        <div class=\"pagination\">\r\n          <el-pagination\r\n            v-model:current-page=\"currentPage\"\r\n            v-model:page-size=\"pageSize\"\r\n            :total=\"unsetStudents.length\"\r\n            :page-sizes=\"[10, 20, 30, 50]\"\r\n            layout=\"total, sizes, prev, pager, next, jumper\"\r\n            @size-change=\"handleSizeChange\"\r\n            @current-change=\"handleCurrentChange\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted, computed } from 'vue'\r\nimport { DataLine, Refresh, Download, Connection, Operation } from '@element-plus/icons-vue'\r\nimport { useRouter } from 'vue-router'\r\nimport { getAllGrades } from '@/api/grade'\r\nimport { getAllMajors } from '@/api/major'\r\nimport { getUnsetStudents } from '@/api/student'\r\nimport { \r\n  getUnselectedGroups,\r\n  getNotFullGroups,\r\n  getGroupsWithoutTeacher,\r\n  getGroupsWithTeacher\r\n} from '@/api/group'\r\nimport { ElMessage } from 'element-plus'\r\nimport * as XLSX from 'xlsx'\r\nimport { getAllocations } from '@/api/group'\r\n\r\nconst router = useRouter()\r\nconst loading = ref(false)\r\nconst detailLoading = ref(false)\r\nconst grades = ref([])\r\nconst majors = ref([])\r\nconst selectedGrade = ref('')\r\nconst statsData = ref([])\r\nconst dialogVisible = ref(false)\r\nconst unsetStudents = ref([])\r\nconst currentMajor = ref('')\r\nconst exportLoading = ref(false)\r\n\r\n// 分页相关\r\nconst currentPage = ref(1)\r\nconst pageSize = ref(10)\r\n\r\n// 计算当前页的学生\r\nconst currentPageStudents = computed(() => {\r\n  const start = (currentPage.value - 1) * pageSize.value\r\n  const end = start + pageSize.value\r\n  return unsetStudents.value.slice(start, end)\r\n})\r\n\r\n// 获取年级和专业列表\r\nconst getInitialData = async () => {\r\n  try {\r\n    const [gradesData, majorsData] = await Promise.all([\r\n      getAllGrades(),\r\n      getAllMajors()\r\n    ])\r\n    grades.value = gradesData\r\n    majors.value = majorsData\r\n    \r\n    // 默认选择第一个年级\r\n    if (gradesData.length) {\r\n      selectedGrade.value = gradesData[0].gde_value\r\n      await getStats()\r\n    }\r\n  } catch (error) {\r\n    ElMessage.error('获取基础数据失败')\r\n  }\r\n}\r\n\r\n// 获取统计数据\r\nconst getStats = async () => {\r\n  if (!selectedGrade.value) return\r\n  \r\n  loading.value = true\r\n  try {\r\n    const stats = await Promise.all(\r\n      majors.value.map(async (major) => {\r\n        const unsetStudents = await getUnsetStudents(selectedGrade.value, major.mjr_name)\r\n        return {\r\n          major: major.mjr_name,\r\n          unsetCount: unsetStudents.length\r\n        }\r\n      })\r\n    )\r\n    statsData.value = stats\r\n  } catch (error) {\r\n    ElMessage.error('获取统计数据失败')\r\n  } finally {\r\n    loading.value = false\r\n  }\r\n}\r\n\r\n// 查看未分组学生名单\r\nconst viewUnsetStudents = async (row) => {\r\n  detailLoading.value = true\r\n  currentPage.value = 1  // 重置页码\r\n  try {\r\n    const students = await getUnsetStudents(selectedGrade.value, row.major)\r\n    unsetStudents.value = students\r\n    currentMajor.value = row.major\r\n    dialogVisible.value = true\r\n  } catch (error) {\r\n    ElMessage.error('获取学生名单失败')\r\n  } finally {\r\n    detailLoading.value = false\r\n  }\r\n}\r\n\r\n// 年级变化处理\r\nconst handleGradeChange = () => {\r\n  getStats()\r\n}\r\n\r\n// 刷新统计\r\nconst refreshStats = () => {\r\n  getStats()\r\n}\r\n\r\n// 处理分页大小变化\r\nconst handleSizeChange = (val) => {\r\n  pageSize.value = val\r\n  currentPage.value = 1\r\n}\r\n\r\n// 处理页码变化\r\nconst handleCurrentChange = (val) => {\r\n  currentPage.value = val\r\n}\r\n\r\n// 导出到Excel\r\nconst exportToExcel = async () => {\r\n  if (!unsetStudents.value.length) {\r\n    ElMessage.warning('没有可导出的数据')\r\n    return\r\n  }\r\n  \r\n  exportLoading.value = true\r\n  try {\r\n    // 准备导出数据\r\n    const exportData = unsetStudents.value.map(student => ({\r\n      '学号': student.stu_num,\r\n      '姓名': student.stu_name,\r\n      '班级': student.stu_cls,\r\n      '联系方式': student.stu_phone\r\n    }))\r\n\r\n    // 创建工作簿和工作表\r\n    const wb = XLSX.utils.book_new()\r\n    const ws = XLSX.utils.json_to_sheet(exportData)\r\n\r\n    // 设置列宽\r\n    const colWidths = [\r\n      { wch: 15 },  // 学号\r\n      { wch: 10 },  // 姓名\r\n      { wch: 10 },  // 班级\r\n      { wch: 15 }   // 联系方式\r\n    ]\r\n    ws['!cols'] = colWidths\r\n\r\n    // 添加工作表到工作簿\r\n    XLSX.utils.book_append_sheet(\r\n      wb, \r\n      ws, \r\n      `${selectedGrade.value}级${currentMajor.value}未分组学生`\r\n    )\r\n\r\n    // 导出文件\r\n    XLSX.writeFile(\r\n      wb, \r\n      `${selectedGrade.value}级${currentMajor.value}未分组学生名单.xlsx`\r\n    )\r\n\r\n    ElMessage.success('导出成功')\r\n  } catch (error) {\r\n    console.error('导出失败:', error)\r\n    ElMessage.error('导出失败')\r\n  } finally {\r\n    exportLoading.value = false\r\n  }\r\n}\r\n\r\n// 小组统计相关\r\nconst groupLoading = ref(false)\r\nconst selectedGradeForGroup = ref('')\r\nconst groupStatsData = ref([])\r\n\r\n// 获取小组统计数据\r\nconst getGroupStats = async () => {\r\n  if (!selectedGradeForGroup.value) return\r\n  \r\n  groupLoading.value = true\r\n  try {\r\n    const stats = await Promise.all(\r\n      majors.value.map(async (major) => {\r\n        const [unselected, notFull, withoutTeacher, withTeacher] = await Promise.all([\r\n          getUnselectedGroups(selectedGradeForGroup.value, major.mjr_name),\r\n          getNotFullGroups(selectedGradeForGroup.value, major.mjr_name),\r\n          getGroupsWithoutTeacher(selectedGradeForGroup.value, major.mjr_name),\r\n          getGroupsWithTeacher(selectedGradeForGroup.value, major.mjr_name)\r\n        ])\r\n        return {\r\n          major: major.mjr_name,\r\n          unselectedCount: unselected.length,\r\n          notFullCount: notFull.length,\r\n          withoutTeacherCount: withoutTeacher.length,\r\n          withTeacherCount: withTeacher.length\r\n        }\r\n      })\r\n    )\r\n    groupStatsData.value = stats\r\n  } catch (error) {\r\n    ElMessage.error('获取小组统计数据失败')\r\n  } finally {\r\n    groupLoading.value = false\r\n  }\r\n}\r\n\r\n// 年级变化处理（小组统计）\r\nconst handleGradeChangeForGroup = () => {\r\n  getGroupStats()\r\n}\r\n\r\n// 刷新小组统计\r\nconst refreshGroupStats = () => {\r\n  getGroupStats()\r\n}\r\n\r\n// 查看小组\r\nconst viewGroups = (major, type) => {\r\n  router.push({\r\n    path: '/system-management/manage/group',\r\n    query: {\r\n      grade: selectedGradeForGroup.value,\r\n      major,\r\n      type\r\n    }\r\n  })\r\n}\r\n\r\n// 分配相关状态\r\nconst allocForm = ref({\r\n  grade: '',\r\n  major: ''\r\n})\r\nconst allocating = ref(false)\r\nconst allocationResults = ref([])\r\nconst isCollapsed = ref(true)\r\n\r\n// 只保留过滤有效结果的计算属性\r\nconst validResults = computed(() => {\r\n  return allocationResults.value.filter(item => item.details.teacher)\r\n})\r\n\r\n// 自动分配\r\nconst handleAutoAllocation = async () => {\r\n  if (!allocForm.value.grade || !allocForm.value.major) {\r\n    ElMessage.warning('请选择年级和专业')\r\n    return\r\n  }\r\n  \r\n  allocating.value = true\r\n  try {\r\n    const res = await getAllocations(allocForm.value.grade, allocForm.value.major)\r\n    allocationResults.value = res\r\n    ElMessage.success('分配完成')\r\n  } catch (error) {\r\n    ElMessage.error('分配失败')\r\n  } finally {\r\n    allocating.value = false\r\n  }\r\n}\r\n\r\n// 获取组长姓名\r\nconst getLeaderName = (students) => {\r\n  const leader = students.find(s => s.stu_lead)\r\n  return leader ? leader.stu_name : '未设置'\r\n}\r\n\r\n// 导出结果\r\nconst handleExport = () => {\r\n  // 准备导出数据，只导出已分配教师的结果\r\n  const exportData = allocationResults.value\r\n    .filter(item => item.details.teacher)\r\n    .map(item => ({\r\n      '小组名称': item.group_name,\r\n      '选题': item.group_title,\r\n      '组长': getLeaderName(item.details.studentsList),\r\n      '成员': item.details.studentsList.map(s => s.stu_name).join('、'),\r\n      '指导教师': item.details.teacher.tea_name\r\n    }))\r\n\r\n  // 创建工作簿和工作表\r\n  const wb = XLSX.utils.book_new()\r\n  const ws = XLSX.utils.json_to_sheet(exportData)\r\n\r\n  // 设置列宽\r\n  ws['!cols'] = [\r\n    { wch: 15 },  // 小组名称\r\n    { wch: 30 },  // 选题\r\n    { wch: 10 },  // 组长\r\n    { wch: 40 },  // 成员\r\n    { wch: 15 }   // 指导教师\r\n  ]\r\n\r\n  // 添加工作表到工作簿\r\n  XLSX.utils.book_append_sheet(\r\n    wb, \r\n    ws, \r\n    `${allocForm.value.find(g => g.gde_id === allocForm.value.grade)?.gde_value}级分配结果`\r\n  )\r\n\r\n  // 导出文件\r\n  XLSX.writeFile(\r\n    wb, \r\n    `${allocForm.value.find(g => g.gde_id === allocForm.value.grade)?.gde_value}级${majors.value.find(m => m.mjr_id === allocForm.value.major)?.mjr_name}分配结果.xlsx`\r\n  )\r\n}\r\n\r\n// tab 激活状态\r\nconst activeTab = ref('allocation')\r\n\r\nonMounted(() => {\r\n  getInitialData()\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.dashboard {\r\n  .page-header {\r\n    margin-bottom: 20px;\r\n    h2 {\r\n      margin: 0;\r\n      color: #1890ff;\r\n      font-size: 24px;\r\n    }\r\n  }\r\n\r\n  .content-card {\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 100%;\r\n\r\n    :deep(.el-card__body) {\r\n      width: 100%;\r\n      flex: 1;\r\n    }\r\n\r\n    :deep(.el-tabs) {\r\n      width: 100%;\r\n      height: 100%;\r\n    }\r\n\r\n    :deep(.el-tabs__content) {\r\n      width: 100%;\r\n      height: 100%;\r\n    }\r\n\r\n    :deep(.el-tab-pane) {\r\n      width: 100%;\r\n      height: 100%;\r\n    }\r\n  }\r\n\r\n  .stats-card {\r\n    margin-bottom: 24px;\r\n    width: 100%;\r\n    \r\n    .card-header {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n\r\n      .title {\r\n        display: flex;\r\n        align-items: center;\r\n        gap: 8px;\r\n        font-size: 16px;\r\n        font-weight: bold;\r\n        color: #1890ff;  // 统一标题颜色\r\n      }\r\n    }\r\n    \r\n    .allocation-form {\r\n      :deep(.el-form-item) {\r\n        margin-bottom: 0;\r\n        \r\n        .el-select {\r\n          width: 100%;\r\n        }\r\n      }\r\n    }\r\n\r\n    .stats-content {\r\n      width: 100%;\r\n      \r\n      .filter-area {\r\n        margin-bottom: 20px;\r\n      }\r\n      \r\n      :deep(.el-table) {\r\n        width: 100% !important;\r\n      }\r\n    }\r\n  }\r\n\r\n  .dialog-content {\r\n    .dialog-header {\r\n      margin-bottom: 15px;\r\n      display: flex;\r\n      justify-content: flex-end;\r\n    }\r\n\r\n    .pagination {\r\n      margin-top: 20px;\r\n      display: flex;\r\n      justify-content: flex-end;\r\n    }\r\n  }\r\n\r\n  .allocation-content {\r\n    .allocation-form {\r\n      margin-bottom: 20px;\r\n    }\r\n\r\n    .allocation-results {\r\n      margin-top: 20px;\r\n\r\n      .table-controls {\r\n        margin-bottom: 16px;\r\n        display: flex;\r\n        justify-content: flex-end;\r\n      }\r\n    }\r\n  }\r\n\r\n  .full-width-table {\r\n    margin-top: 20px;\r\n    width: 100% !important;\r\n    flex: 1;\r\n\r\n    :deep(table) {\r\n      width: 100% !important;\r\n    }\r\n  }\r\n}\r\n</style> ","import script from \"./admin-dashboard.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./admin-dashboard.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./admin-dashboard.vue?vue&type=style&index=0&id=477d7cfb&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-477d7cfb\"]])\n\nexport default __exports__"],"names":["router","useRouter","loading","ref","detailLoading","grades","majors","selectedGrade","statsData","dialogVisible","unsetStudents","currentMajor","exportLoading","currentPage","pageSize","currentPageStudents","computed","start","value","end","slice","getInitialData","async","gradesData","majorsData","Promise","all","getAllGrades","getAllMajors","length","gde_value","getStats","error","ElMessage","stats","map","getUnsetStudents","major","mjr_name","unsetCount","viewUnsetStudents","students","row","handleGradeChange","refreshStats","handleSizeChange","val","handleCurrentChange","exportToExcel","exportData","student","stu_num","stu_name","stu_cls","stu_phone","wb","XLSX","book_new","ws","json_to_sheet","colWidths","wch","book_append_sheet","success","console","warning","groupLoading","selectedGradeForGroup","groupStatsData","getGroupStats","unselected","notFull","withoutTeacher","withTeacher","getUnselectedGroups","getNotFullGroups","getGroupsWithoutTeacher","getGroupsWithTeacher","unselectedCount","notFullCount","withoutTeacherCount","withTeacherCount","handleGradeChangeForGroup","refreshGroupStats","viewGroups","type","push","path","query","grade","allocForm","allocating","allocationResults","isCollapsed","validResults","filter","item","details","teacher","handleAutoAllocation","res","getAllocations","getLeaderName","leader","find","s","stu_lead","handleExport","group_name","group_title","studentsList","join","tea_name","g","gde_id","m","mjr_id","activeTab","onMounted","__exports__"],"sourceRoot":""}