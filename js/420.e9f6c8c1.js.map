{"version":3,"file":"js/420.e9f6c8c1.js","mappings":"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","sources":["webpack://gdmu-mentor-selection/./src/api/student.js","webpack://gdmu-mentor-selection/./src/views/student/my-group.vue","webpack://gdmu-mentor-selection/./src/views/student/my-group.vue?b66d"],"sourcesContent":["import request from '@/utils/request'\r\n\r\n// 获取未分组的学生\r\nexport function getUnsetStudents(gde, mjr) {\r\n  return request({\r\n    url: '/api/Student/get-unset',\r\n    method: 'get',\r\n    params: {\r\n      gde,\r\n      mjr\r\n    }\r\n  })\r\n}\r\n\r\n// 更新学生信息\r\nexport function updateStudentInfo(data) {\r\n  return request({\r\n    url: '/api/Student/update-info',\r\n    method: 'post',\r\n    data\r\n  })\r\n}\r\n\r\n// 更新学生密码\r\nexport function updateStudentPassword(id, newPassword) {\r\n  return request({\r\n    url: '/api/Student/update-password',\r\n    method: 'post',\r\n    params: {\r\n      id,\r\n      newPassword\r\n    }\r\n  })\r\n}\r\n\r\n// 获取登录记录\r\nexport function getLoginRecord(account) {\r\n  return request({\r\n    url: '/api/Student/login-record',\r\n    method: 'get',\r\n    params: { account }\r\n  })\r\n}\r\n\r\n// 获取所有学生\r\nexport function getAllStudents() {\r\n  return request({\r\n    url: '/api/Student',\r\n    method: 'get'\r\n  })\r\n}\r\n\r\n// 更新学生信息\r\nexport function updateStudentInfoByAdmin(id, data) {\r\n  return request({\r\n    url: `/api/Student/update/${id}`,\r\n    method: 'post',\r\n    data\r\n  })\r\n}\r\n\r\n// 重置学生密码\r\nexport function resetStudentPassword(id, newPassword) {\r\n  return request({\r\n    url: '/api/Student/update-password',\r\n    method: 'post',\r\n    params: {\r\n      id,\r\n      newPassword\r\n    }\r\n  })\r\n}\r\n\r\n// 删除学生\r\nexport function deleteStudent(id) {\r\n  return request({\r\n    url: `/api/Student/delete/${id}`,\r\n    method: 'post'\r\n  })\r\n}\r\n\r\n// 添加单个学生\r\nexport function addStudent(data) {\r\n  return request({\r\n    url: '/api/Student',\r\n    method: 'post',\r\n    data\r\n  })\r\n}\r\n\r\n// 批量添加学生\r\nexport function bulkCreateStudents(data) {\r\n  return request({\r\n    url: '/api/Student/bulk-create',\r\n    method: 'post',\r\n    data\r\n  })\r\n} ","<template>\r\n  <div class=\"my-group\">\r\n    <el-card v-loading=\"loading\">\r\n      <!-- 小组基本信息 -->\r\n      <template #header>\r\n        <div class=\"card-header\">\r\n          <h3>小组信息</h3>\r\n          <div class=\"header-actions\">\r\n            <template v-if=\"isLeader\">\r\n              <el-button type=\"primary\" @click=\"handleEditInfo\">\r\n                修改信息\r\n              </el-button>\r\n              <el-button type=\"danger\" @click=\"handleDismiss\">\r\n                解散小组\r\n              </el-button>\r\n            </template>\r\n            <template v-else>\r\n              <el-button type=\"primary\" @click=\"handleEditInfo\">\r\n                修改信息\r\n              </el-button>\r\n              <el-button type=\"danger\" @click=\"handleQuit\">\r\n                退出小组\r\n              </el-button>\r\n            </template>\r\n          </div>\r\n        </div>\r\n      </template>\r\n\r\n      <!-- 小组详细信息 -->\r\n      <el-descriptions :column=\"2\" border>\r\n        <el-descriptions-item label=\"小组名称\">{{ groupInfo.group_name }}</el-descriptions-item>\r\n        <el-descriptions-item label=\"小组编号\">{{ groupInfo.group_id }}</el-descriptions-item>\r\n        <el-descriptions-item label=\"选题\">{{ groupInfo.group_title }}</el-descriptions-item>\r\n        <el-descriptions-item label=\"描述\">{{ groupInfo.group_info }}</el-descriptions-item>\r\n      </el-descriptions>\r\n\r\n      <!-- 成员列表 -->\r\n      <div class=\"member-section\">\r\n        <div class=\"section-header\">\r\n          <div class=\"header-left\">\r\n            <h4>小组成员</h4>\r\n            <el-tag type=\"info\" size=\"small\" class=\"member-count\">\r\n              {{ members.length }}/{{ userStore.configInfo?.max_group_member || '-' }}\r\n            </el-tag>\r\n          </div>\r\n          <el-button \r\n            type=\"primary\" \r\n            @click=\"handleAddMember\"\r\n            v-if=\"members.length < (userStore.configInfo?.max_group_member || 0)\"\r\n          >\r\n            添加成员\r\n          </el-button>\r\n        </div>\r\n        <el-table :data=\"members\" stripe>\r\n          <el-table-column prop=\"stu_name\" label=\"姓名\" />\r\n          <el-table-column prop=\"stu_num\" label=\"学号\" />\r\n          <el-table-column prop=\"stu_cls\" label=\"班级\" />\r\n          <el-table-column prop=\"stu_phone\" label=\"联系方式\" />\r\n          <el-table-column label=\"身份\">\r\n            <template #default=\"scope\">\r\n              <el-tag :type=\"scope.row.stu_lead ? 'success' : ''\">\r\n                {{ scope.row.stu_lead ? '组长' : '组员' }}\r\n              </el-tag>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column label=\"操作\" v-if=\"isLeader\">\r\n            <template #default=\"scope\">\r\n              <el-button \r\n                type=\"danger\" \r\n                link\r\n                :disabled=\"scope.row.stu_lead\"\r\n                @click=\"handleRemoveMember(scope.row)\"\r\n              >\r\n                移除\r\n              </el-button>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n      </div>\r\n\r\n      <!-- 预选导师 -->\r\n      <div class=\"teacher-section\">\r\n        <div class=\"section-header\">\r\n          <div class=\"header-left\">\r\n            <h4>预选导师</h4>\r\n          </div>\r\n          <el-button \r\n            type=\"primary\" \r\n            @click=\"handlePreselectTeacher\"\r\n            :disabled=\"!isLeader || hasAssignedTeacher\"\r\n            v-if=\"!hasAssignedTeacher\"\r\n          >\r\n            选择导师\r\n          </el-button>\r\n        </div>\r\n        <template v-if=\"hasAssignedTeacher\">\r\n          <el-descriptions :column=\"2\" border>\r\n            <el-descriptions-item label=\"姓名\">{{ assignedTeacher.tea_name }}</el-descriptions-item>\r\n            <el-descriptions-item label=\"联系方式\">{{ assignedTeacher.tea_phone }}</el-descriptions-item>\r\n            <el-descriptions-item label=\"个人介绍\">{{ assignedTeacher.tea_info }}</el-descriptions-item>\r\n          </el-descriptions>\r\n        </template>\r\n        <template v-else-if=\"selectedTeachers.length\">\r\n          <el-table :data=\"selectedTeachers\" stripe>\r\n            <el-table-column label=\"志愿\" width=\"100\">\r\n              <template #default=\"scope\">\r\n                <el-tag \r\n                  :class=\"getVolunteerType(scope.$index).class\"\r\n                  :type=\"getVolunteerType(scope.$index).type\"\r\n                >\r\n                  第{{ scope.$index + 1 }}志愿\r\n                </el-tag>\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column prop=\"tea_name\" label=\"姓名\" />\r\n            <el-table-column prop=\"tea_phone\" label=\"联系方式\" />\r\n            <el-table-column prop=\"tea_info\" label=\"简介\" />\r\n          </el-table>\r\n        </template>\r\n        <el-empty v-else description=\"暂未预选导师\" />\r\n      </div>\r\n    </el-card>\r\n\r\n    <!-- 修改信息对话框 -->\r\n    <el-dialog\r\n      v-model=\"editDialogVisible\"\r\n      title=\"修改小组信息\"\r\n      width=\"50%\"\r\n      @closed=\"handleEditDialogClose\"\r\n    >\r\n      <el-form\r\n        ref=\"editFormRef\"\r\n        :model=\"editForm\"\r\n        :rules=\"editRules\"\r\n        label-width=\"100px\"\r\n      >\r\n        <el-form-item label=\"小组名称\" prop=\"group_name\">\r\n          <el-input \r\n            v-model=\"editForm.group_name\"\r\n            maxlength=\"30\"\r\n            show-word-limit\r\n          />\r\n        </el-form-item>\r\n        <el-form-item label=\"选题\" prop=\"group_title\">\r\n          <el-input \r\n            v-model=\"editForm.group_title\"\r\n            maxlength=\"30\"\r\n            show-word-limit\r\n          />\r\n        </el-form-item>\r\n        <el-form-item label=\"描述\" prop=\"group_info\">\r\n          <el-input\r\n            v-model=\"editForm.group_info\"\r\n            type=\"textarea\"\r\n            :rows=\"3\"\r\n            maxlength=\"200\"\r\n            show-word-limit\r\n          />\r\n        </el-form-item>\r\n      </el-form>\r\n      <template #footer>\r\n        <el-button @click=\"editDialogVisible = false\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"submitEdit\">确定</el-button>\r\n      </template>\r\n    </el-dialog>\r\n\r\n    <!-- 添加成员对话框 -->\r\n    <el-dialog\r\n      v-model=\"addMemberDialogVisible\"\r\n      title=\"添加成员\"\r\n      width=\"50%\"\r\n      @closed=\"handleAddMemberDialogClose\"\r\n    >\r\n      <div class=\"member-info\">\r\n        <el-alert\r\n          :title=\"`最多可选择 ${userStore.configInfo?.max_group_member - members.length} 人`\"\r\n          type=\"info\"\r\n          :closable=\"false\"\r\n          show-icon\r\n        />\r\n      </div>\r\n\r\n      <div class=\"search-bar\">\r\n        <el-input\r\n          v-model=\"searchStudentKeyword\"\r\n          placeholder=\"搜索学号/姓名\"\r\n          clearable\r\n        >\r\n          <template #prefix>\r\n            <el-icon><Search /></el-icon>\r\n          </template>\r\n        </el-input>\r\n      </div>\r\n      \r\n      <el-table\r\n        ref=\"memberTableRef\"\r\n        v-loading=\"loading\"\r\n        :data=\"filteredStudents\"\r\n        height=\"400\"\r\n        @selection-change=\"handleSelectionChange\"\r\n      >\r\n        <el-table-column \r\n          type=\"selection\" \r\n          width=\"55\"\r\n        />\r\n        <el-table-column prop=\"stu_name\" label=\"姓名\" />\r\n        <el-table-column prop=\"stu_num\" label=\"学号\" />\r\n        <el-table-column prop=\"stu_cls\" label=\"班级\" />\r\n      </el-table>\r\n\r\n      <template #footer>\r\n        <div class=\"dialog-footer\">\r\n          <span class=\"selected-count\">已选择 {{ selectedStudents.length }} 人</span>\r\n          <div>\r\n            <el-button @click=\"addMemberDialogVisible = false\">取消</el-button>\r\n            <el-button \r\n              type=\"primary\" \r\n              @click=\"submitAddMembers\" \r\n              :loading=\"loading\"\r\n              :disabled=\"!selectedStudents.length\"\r\n            >\r\n              确定\r\n            </el-button>\r\n          </div>\r\n        </div>\r\n      </template>\r\n    </el-dialog>\r\n\r\n    <!-- 预选导师对话框 -->\r\n    <el-dialog\r\n      v-model=\"selectTeacherDialogVisible\"\r\n      title=\"预选导师志愿\"\r\n      width=\"60%\"\r\n      @closed=\"handleTeacherDialogClose\"\r\n    >\r\n      <div v-loading=\"loading\">\r\n        <!-- 已选导师列表 -->\r\n        <div class=\"selected-teachers\" v-if=\"selectedTeachers.length\">\r\n          <el-alert\r\n            type=\"info\"\r\n            :closable=\"false\"\r\n            show-icon\r\n          >\r\n            拖动调整志愿顺序，排在前面的优先级更高\r\n          </el-alert>\r\n          <draggable\r\n            v-model=\"selectedTeachers\"\r\n            item-key=\"tea_id\"\r\n            handle=\".drag-handle\"\r\n            ghost-class=\"ghost\"\r\n            class=\"selected-list\"\r\n          >\r\n            <template #item=\"{ element, index }\">\r\n              <div class=\"teacher-item\">\r\n                <el-icon class=\"drag-handle\"><Rank /></el-icon>\r\n                <span class=\"volunteer-index\">志愿{{ index + 1 }}</span>\r\n                <span class=\"teacher-name\">{{ element.tea_name }}</span>\r\n                <el-button \r\n                  type=\"danger\" \r\n                  link \r\n                  @click=\"removeTeacher(element)\"\r\n                >\r\n                  移除\r\n                </el-button>\r\n              </div>\r\n            </template>\r\n          </draggable>\r\n        </div>\r\n\r\n        <!-- 可选导师列表 -->\r\n        <el-table\r\n          ref=\"teacherTableRef\"\r\n          :data=\"availableTeachers\"\r\n          style=\"width: 100%\"\r\n        >\r\n          <el-table-column prop=\"tea_name\" label=\"姓名\" />\r\n          <el-table-column prop=\"tea_phone\" label=\"联系方式\" />\r\n          <el-table-column prop=\"tea_info\" label=\"个人介绍\" show-overflow-tooltip />\r\n          <el-table-column label=\"操作\" width=\"120\">\r\n            <template #default=\"{ row }\">\r\n              <el-button\r\n                type=\"primary\"\r\n                link\r\n                @click=\"selectTeacher(row)\"\r\n                :disabled=\"isTeacherSelected(row.tea_id)\"\r\n              >\r\n                {{ getVolunteerText(row.tea_id) }}\r\n              </el-button>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n      </div>\r\n      <template #footer>\r\n        <span class=\"dialog-footer\">\r\n          <el-button @click=\"selectTeacherDialogVisible = false\">取消</el-button>\r\n          <el-button \r\n            type=\"primary\" \r\n            @click=\"submitTeacherSelection\"\r\n            :loading=\"submitting\"\r\n          >\r\n            确定\r\n          </el-button>\r\n        </span>\r\n      </template>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted, computed, onBeforeUnmount, nextTick } from 'vue'\r\nimport { useRouter } from 'vue-router'\r\nimport { useUserStore } from '@/store/modules/user'\r\nimport { \r\n  getGroupById, \r\n  getGroupStudents, \r\n  updateGroupInfo,\r\n  addGroupMembers,\r\n  removeGroupMember,\r\n  dismissGroup,\r\n  preselectTeachers,\r\n  getTeachersByMajor,\r\n  getPreselectRecord,\r\n  getGroupTeacher\r\n} from '@/api/group'\r\nimport { ElMessage, ElMessageBox } from 'element-plus'\r\nimport { getUnsetStudents } from '@/api/student'\r\nimport { Search, Rank } from '@element-plus/icons-vue'\r\nimport { getCookie } from '@/utils/cookie'\r\nimport draggable from 'vuedraggable'\r\n\r\nconst router = useRouter()\r\nconst userStore = useUserStore()\r\nconst loading = ref(false)\r\nconst groupInfo = ref({})\r\nconst members = ref([])\r\nconst submitting = ref(false)\r\n\r\n// 添加一个标志来控制组件是否已卸载\r\nconst isUnmounted = ref(false)\r\n\r\n// 判断是否为组长\r\nconst isLeader = computed(() => {\r\n  if (!userStore.userInfo) return false\r\n  const currentUserId = userStore.userInfo.stu_id\r\n  return members.value.some(member => \r\n    member.stu_id === currentUserId && member.stu_lead\r\n  )\r\n})\r\n\r\nconst assignedTeacher = ref(null)\r\nconst hasAssignedTeacher = computed(() => {\r\n  return assignedTeacher.value && assignedTeacher.value.tea_id !== 0\r\n})\r\n\r\n// 获取小组信息\r\nconst getGroupInfo = async () => {\r\n  if (isUnmounted.value || !userStore.userInfo) return\r\n  loading.value = true\r\n  try {\r\n    const groupId = userStore.userInfo.stu_group\r\n    if (!groupId) {\r\n      router.push('/student/group')\r\n      return\r\n    }\r\n    \r\n    const [group, groupMembers, teacher] = await Promise.all([\r\n      getGroupById(groupId),\r\n      getGroupStudents(groupId),\r\n      getGroupTeacher(groupId)\r\n    ])\r\n    \r\n    if (isUnmounted.value) return\r\n    \r\n    groupInfo.value = group || {}\r\n    members.value = groupMembers || []\r\n    assignedTeacher.value = teacher\r\n    \r\n    // 只有在没有分配导师时才获取预选记录\r\n    if (!hasAssignedTeacher.value) {\r\n      try {\r\n        const preselectInfo = await getPreselectRecord(groupId)\r\n        if (isUnmounted.value) return\r\n        selectedTeachers.value = preselectInfo?.teachers || []\r\n      } catch (error) {\r\n        if (error.response?.status === 404) {\r\n          selectedTeachers.value = []\r\n        } else {\r\n          throw error\r\n        }\r\n      }\r\n    } else {\r\n      selectedTeachers.value = []\r\n    }\r\n  } catch (error) {\r\n    if (!isUnmounted.value) {\r\n      ElMessage.error('获取小组信息失败')\r\n      members.value = []\r\n      router.push('/student/group')\r\n    }\r\n  } finally {\r\n    if (!isUnmounted.value) {\r\n      loading.value = false\r\n    }\r\n  }\r\n}\r\n\r\n// 修改信息相关\r\nconst editDialogVisible = ref(false)\r\nconst editFormRef = ref(null)\r\nconst editForm = ref({\r\n  group_name: '',\r\n  group_title: '',\r\n  group_info: ''\r\n})\r\nconst editRules = {\r\n  group_name: [\r\n    { required: true, message: '请输入小组名称', trigger: 'blur' },\r\n    { max: 30, message: '小组名称不能超过30个字符', trigger: 'blur' }\r\n  ],\r\n  group_title: [\r\n    { required: true, message: '请输入选题', trigger: 'blur' },\r\n    { max: 30, message: '选题不能超过30个字符', trigger: 'blur' }\r\n  ],\r\n  group_info: [\r\n    { required: true, message: '请输入描述', trigger: 'blur' },\r\n    { max: 200, message: '描述不能超过200个字符', trigger: 'blur' }\r\n  ]\r\n}\r\n\r\nconst handleEditInfo = () => {\r\n  editForm.value = {\r\n    ...groupInfo.value,\r\n    major: groupInfo.value.major,\r\n    grade: groupInfo.value.grade\r\n  }\r\n  editDialogVisible.value = true\r\n}\r\n\r\nconst submitEdit = async () => {\r\n  if (!editFormRef.value) return\r\n  await editFormRef.value.validate(async (valid) => {\r\n    if (valid) {\r\n      loading.value = true\r\n      try {\r\n        await updateGroupInfo(editForm.value)\r\n        ElMessage.success('修改成功')\r\n        editDialogVisible.value = false\r\n        await getGroupInfo()\r\n      } catch (error) {\r\n        ElMessage.error('修改失败')\r\n      } finally {\r\n        loading.value = false\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\n// 添加成员相关状态\r\nconst addMemberDialogVisible = ref(false)\r\nconst selectedStudents = ref([])\r\nconst availableStudents = ref([])\r\nconst searchStudentKeyword = ref('')\r\nconst memberTableRef = ref(null)\r\n\r\n// 计算滤后的学生列表\r\nconst filteredStudents = computed(() => {\r\n  if (!searchStudentKeyword.value) return availableStudents.value\r\n  \r\n  const keyword = searchStudentKeyword.value.toLowerCase()\r\n  return availableStudents.value.filter(student => \r\n    student.stu_num.toLowerCase().includes(keyword) ||\r\n    student.stu_name.toLowerCase().includes(keyword)\r\n  )\r\n})\r\n\r\n// 处理学生选择\r\nconst handleSelectionChange = (selection) => {\r\n  const maxMembers = userStore.configInfo?.max_group_member || 0;\r\n  const remainingSlots = maxMembers - members.value.length;\r\n\r\n  // 如果是取消选择，直接更新选择状态\r\n  if (selection.length < selectedStudents.value.length) {\r\n    selectedStudents.value = selection.map(student => student.stu_id);\r\n    return;\r\n  }\r\n\r\n  // 如果是新增选择，检查是否超出限制\r\n  if (selection.length > remainingSlots) {\r\n    ElMessage.warning(`最多只能选择 ${remainingSlots} 人`);\r\n    // 恢复之前的选择状态\r\n    nextTick(() => {\r\n      selectedStudents.value.forEach(id => {\r\n        const student = availableStudents.value.find(s => s.stu_id === id);\r\n        if (student) {\r\n          memberTableRef.value?.toggleRowSelection(student, true);\r\n        }\r\n      });\r\n\r\n      availableStudents.value.forEach(student => {\r\n        if (!selectedStudents.value.includes(student.stu_id)) {\r\n          memberTableRef.value?.toggleRowSelection(student, false);\r\n          student.disabled = true;\r\n        }\r\n      });\r\n    });\r\n    return;\r\n  } else {\r\n    // 如果未达到限制，确保所有行都是可选的\r\n    availableStudents.value.forEach(student => {\r\n      student.disabled = false;\r\n    });\r\n  }\r\n\r\n  // 更新选择状态\r\n  selectedStudents.value = selection.map(student => student.stu_id);\r\n}\r\n\r\n// 提交添加成员\r\nconst submitAddMembers = async () => {\r\n  if (!selectedStudents.value.length) return\r\n  \r\n  if (members.value.length + selectedStudents.value.length > userStore.configInfo?.max_group_member) {\r\n    ElMessage.warning(`小组成员不能超过${userStore.configInfo?.max_group_member}人`)\r\n    return\r\n  }\r\n\r\n  loading.value = true\r\n  try {\r\n    // 再次检查选中的学生是否还没有加入其他组\r\n    const grade = groupInfo.value?.grade || userStore.userInfo.stu_gde\r\n    const major = groupInfo.value?.major || userStore.userInfo.stu_mjr\r\n    const unsetStudents = await getUnsetStudents(grade, major)\r\n    \r\n    // 获仍然未加入组的学生ID\r\n    const stillUnsetIds = unsetStudents.map(student => student.stu_id)\r\n    const validSelectedIds = []\r\n    const invalidStudents = []\r\n    \r\n    for (const id of selectedStudents.value) {\r\n      if (stillUnsetIds.includes(id)) {\r\n        validSelectedIds.push(id)\r\n      } else {\r\n        const student = availableStudents.value.find(s => s.stu_id === id)\r\n        if (student) {\r\n          invalidStudents.push(student.stu_name)\r\n        }\r\n      }\r\n    }\r\n\r\n    if (invalidStudents.length > 0) {\r\n      ElMessageBox.alert(\r\n        `以下学生已加入其他小组，请重新选择：\\n${invalidStudents.join('、')}`,\r\n        '提示'\r\n      ).then(() => {\r\n        handleAddMember()\r\n      })\r\n      return\r\n    }\r\n\r\n    console.log('添加组员请求:', {\r\n      groupId: groupInfo.value.group_id,\r\n      studentIds: validSelectedIds\r\n    })\r\n\r\n    // 如果所有选中的学生都还加入组，则进行添加\r\n    await addGroupMembers(groupInfo.value.group_id, validSelectedIds)\r\n    ElMessage.success('添加成功')\r\n    addMemberDialogVisible.value = false\r\n    await getGroupInfo()\r\n  } catch (error) {\r\n    console.error('添加组员失败:', error)\r\n    ElMessage.error('添加失败，请重试')\r\n  } finally {\r\n    loading.value = false\r\n  }\r\n}\r\n\r\n// 预选导师相关\r\nconst selectTeacherDialogVisible = ref(false)\r\nconst availableTeachers = ref([])\r\nconst selectedTeachers = ref([])\r\n\r\n// 选择教师\r\nconst selectTeacher = (teacher) => {\r\n  if (isTeacherSelected(teacher.tea_id)) return\r\n  const maxChoice = userStore.configInfo?.max_stu_choice || 0\r\n  if (selectedTeachers.value.length >= maxChoice) {\r\n    ElMessage.warning(`最多只能选择 ${maxChoice} 个导师`)\r\n    return\r\n  }\r\n  selectedTeachers.value.push(teacher)\r\n}\r\n\r\n// 对话框关闭处理函数\r\nconst handleTeacherDialogClose = () => {\r\n  // 如果没有提交，恢复到原始状态\r\n  if (!submitting.value) {\r\n    // 获取原始预选记录\r\n    getGroupInfo()\r\n  }\r\n  // 清理临时选择状态\r\n  availableTeachers.value = []\r\n}\r\n\r\n// 提交导师选择\r\nconst submitTeacherSelection = async () => {\r\n  if (!selectedTeachers.value.length) {\r\n    ElMessage.warning('请至少选择一个导师')\r\n    return\r\n  }\r\n\r\n  const maxChoice = userStore.configInfo?.max_stu_choice || 0\r\n  if (selectedTeachers.value.length > maxChoice) {\r\n    ElMessage.warning(`最多只能选择 ${maxChoice} 个导师`)\r\n    return\r\n  }\r\n  \r\n  submitting.value = true\r\n  try {\r\n    await preselectTeachers(\r\n      groupInfo.value.group_id, \r\n      selectedTeachers.value.map(t => t.tea_id)\r\n    )\r\n    ElMessage.success('预选成功')\r\n    selectTeacherDialogVisible.value = false\r\n  } catch (error) {\r\n    ElMessage.error('预选失败')\r\n  } finally {\r\n    submitting.value = false\r\n  }\r\n}\r\n\r\n// 对话框关闭处理函数\r\nconst handleEditDialogClose = () => {\r\n  editForm.value = {\r\n    group_name: '',\r\n    group_title: '',\r\n    group_info: ''\r\n  }\r\n}\r\n\r\nconst handleAddMemberDialogClose = () => {\r\n  selectedStudents.value = []\r\n  availableStudents.value = []\r\n  searchStudentKeyword.value = ''\r\n}\r\n\r\n// 获取志愿标签类型\r\nconst getVolunteerType = (index) => {\r\n  const types = {\r\n    0: { type: '', class: 'gold-tag' },    // 金牌\r\n    1: { type: '', class: 'silver-tag' },  // 银牌\r\n    2: { type: '', class: 'bronze-tag' }   // 铜牌\r\n  }\r\n  return types[index] || { type: 'info', class: '' }\r\n}\r\n\r\n// 修改路由跳转相关的函数\r\nconst safeRouterPush = async (path) => {\r\n  if (isUnmounted.value) return\r\n  try {\r\n    await router.push(path)\r\n  } catch (error) {\r\n    console.error('Navigation error:', error)\r\n  }\r\n}\r\n\r\n// 修改组件卸载处理\r\nonBeforeUnmount(() => {\r\n  isUnmounted.value = true\r\n  // 取消所有未完成的请求\r\n  if (loading.value) {\r\n    loading.value = false\r\n  }\r\n  // 清除有定时器和事件监听器\r\n  window._routeChanging = false\r\n})\r\n\r\nonMounted(() => {\r\n  if (!userStore.userInfo) {\r\n    const storedUserInfo = getCookie('userInfo')\r\n    if (storedUserInfo) {\r\n      userStore.userInfo = JSON.parse(storedUserInfo)\r\n      getGroupInfo()\r\n    } else {\r\n      router.push('/student/login')\r\n    }\r\n  } else {\r\n    getGroupInfo()\r\n  }\r\n})\r\n\r\n// 移除成员\r\nconst handleRemoveMember = async (member) => {\r\n  await ElMessageBox.confirm(\r\n    `确定要移除成员 ${member.stu_name} 吗？`,\r\n    '提示',\r\n    {\r\n      confirmButtonText: '确定',\r\n      cancelButtonText: '取消',\r\n      type: 'warning'\r\n    }\r\n  )\r\n  loading.value = true\r\n  try {\r\n    await removeGroupMember(groupInfo.value.group_id, member.stu_id)\r\n    ElMessage.success('移除成功')\r\n    await getGroupInfo()\r\n  } catch (error) {\r\n    ElMessage.error('移除失败')\r\n  } finally {\r\n    loading.value = false\r\n  }\r\n}\r\n\r\n// 退出小组\r\nconst handleQuit = async () => {\r\n  if (isUnmounted.value || loading.value) return\r\n  \r\n  try {\r\n    await ElMessageBox.confirm(\r\n      '确定要退出小组吗？',\r\n      '提示',\r\n      {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }\r\n    )\r\n\r\n    loading.value = true\r\n    await removeGroupMember(\r\n      groupInfo.value.group_id, \r\n      userStore.userInfo.stu_id\r\n    )\r\n\r\n    if (!isUnmounted.value) {\r\n      ElMessage.success('退出成功')\r\n      userStore.userInfo.stu_group = null\r\n      await safeRouterPush('/student/group')\r\n    }\r\n  } catch (error) {\r\n    if (!isUnmounted.value && error !== 'cancel') {\r\n      ElMessage.error('退出失败')\r\n    }\r\n  } finally {\r\n    if (!isUnmounted.value) {\r\n      loading.value = false\r\n    }\r\n  }\r\n}\r\n\r\n// 解散小组\r\nconst handleDismiss = async () => {\r\n  try {\r\n    await ElMessageBox.confirm(\r\n      '确定要解散小组吗？此操作不可恢复！',\r\n      '警告',\r\n      {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }\r\n    )\r\n    loading.value = true\r\n    await dismissGroup(\r\n      groupInfo.value.group_id, \r\n      userStore.userInfo.stu_id\r\n    )\r\n    ElMessage.success('解散成功')\r\n    userStore.userInfo.stu_group = null\r\n    router.push('/student/group')\r\n  } catch (error) {\r\n    if (error !== 'cancel') {\r\n      ElMessage.error('解散失败')\r\n    }\r\n  } finally {\r\n    loading.value = false\r\n  }\r\n}\r\n\r\n// 打开加成员对话框\r\nconst handleAddMember = async () => {\r\n  selectedStudents.value = []\r\n  availableStudents.value = []\r\n  \r\n  loading.value = true\r\n  try {\r\n    const grade = groupInfo.value?.grade || userStore.userInfo.stu_gde\r\n    const major = groupInfo.value?.major || userStore.userInfo.stu_mjr\r\n    \r\n    const students = await getUnsetStudents(grade, major)\r\n    availableStudents.value = students || []\r\n    addMemberDialogVisible.value = true\r\n  } catch (error) {\r\n    ElMessage.error('获取可添加学生失败')\r\n    availableStudents.value = []\r\n  } finally {\r\n    loading.value = false\r\n  }\r\n}\r\n\r\n// 检查教师是否已被选中\r\nconst isTeacherSelected = (teacherId) => {\r\n  return selectedTeachers.value.some(t => t.tea_id === teacherId)\r\n}\r\n\r\n// 获取志愿文本\r\nconst getVolunteerText = (teacherId) => {\r\n  const index = selectedTeachers.value.findIndex(t => t.tea_id === teacherId)\r\n  if (index === -1) return '选择'\r\n  return `志愿${index + 1}`\r\n}\r\n\r\n// 移除教师\r\nconst removeTeacher = (teacher) => {\r\n  const index = selectedTeachers.value.findIndex(t => t.tea_id === teacher.tea_id)\r\n  if (index > -1) {\r\n    selectedTeachers.value.splice(index, 1)\r\n  }\r\n}\r\n\r\n// 打开预选导师对话框\r\nconst handlePreselectTeacher = async () => {\r\n  loading.value = true\r\n  try {\r\n    const major = groupInfo.value?.major || userStore.userInfo.stu_mjr\r\n    \r\n    // 获取可选导师列表\r\n    const teachers = await getTeachersByMajor(major)\r\n    availableTeachers.value = teachers || []\r\n    selectTeacherDialogVisible.value = true\r\n  } catch (error) {\r\n    ElMessage.error('获取导师列表失败')\r\n    availableTeachers.value = []\r\n  } finally {\r\n    loading.value = false\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.my-group {\r\n  .card-header {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n\r\n    h3 {\r\n      margin: 0;\r\n    }\r\n\r\n    .header-actions {\r\n      display: flex;\r\n      gap: 12px;\r\n    }\r\n  }\r\n\r\n  .member-section,\r\n  .teacher-section {\r\n    margin-top: 20px;\r\n\r\n    .section-header {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n      margin-bottom: 16px;\r\n\r\n      .header-left {\r\n        display: flex;\r\n        align-items: center;\r\n        gap: 10px;\r\n\r\n        h4 {\r\n          margin: 0;\r\n          padding-left: 10px;\r\n          border-left: 4px solid #1890ff;\r\n        }\r\n\r\n        .member-count {\r\n          font-size: 12px;\r\n          padding: 2px 8px;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  .teacher-section {\r\n    .el-descriptions {\r\n      margin-top: 15px;\r\n    }\r\n  }\r\n}\r\n\r\n.search-bar {\r\n  margin-bottom: 15px;\r\n  \r\n  .el-input {\r\n    width: 300px;\r\n  }\r\n}\r\n\r\n.el-dialog {\r\n  .el-table {\r\n    margin: 15px 0;\r\n  }\r\n}\r\n\r\n.el-alert {\r\n  margin: 10px 0;\r\n}\r\n\r\n.el-table {\r\n  margin-top: 15px;\r\n}\r\n\r\n// 添加金银铜色样\r\n:deep(.gold-tag) {\r\n  background-color: #ffd700 !important;  // 金色\r\n  border-color: #ffd700 !important;\r\n  color: #333 !important;\r\n}\r\n\r\n:deep(.silver-tag) {\r\n  background-color: #c0c0c0 !important;  // 银色\r\n  border-color: #c0c0c0 !important;\r\n  color: #333 !important;\r\n}\r\n\r\n:deep(.bronze-tag) {\r\n  background-color: #cd7f32 !important;  // 铜色\r\n  border-color: #cd7f32 !important;\r\n  color: #fff !important;\r\n}\r\n\r\n.dialog-footer {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n\r\n  .selected-count {\r\n    color: #666;\r\n    font-size: 14px;\r\n  }\r\n}\r\n\r\n.selected-teachers {\r\n  margin-bottom: 20px;\r\n\r\n  .el-alert {\r\n    margin-bottom: 15px;\r\n  }\r\n\r\n  .selected-list {\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  .teacher-item {\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 12px;\r\n    margin-bottom: 8px;\r\n    background: #f8f9fa;\r\n    border-radius: 4px;\r\n    transition: all 0.3s;\r\n\r\n    &:hover {\r\n      background: #f0f2f5;\r\n    }\r\n\r\n    .drag-handle {\r\n      cursor: move;\r\n      margin-right: 12px;\r\n      color: #999;\r\n    }\r\n\r\n    .volunteer-index {\r\n      margin-right: 12px;\r\n      color: #1890ff;\r\n      font-weight: bold;\r\n    }\r\n\r\n    .teacher-name {\r\n      flex: 1;\r\n      margin-right: 12px;\r\n    }\r\n  }\r\n}\r\n\r\n.ghost {\r\n  opacity: 0.5;\r\n  background: #c8ebfb;\r\n}\r\n</style> ","import script from \"./my-group.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./my-group.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./my-group.vue?vue&type=style&index=0&id=de0319d2&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-de0319d2\"]])\n\nexport default __exports__"],"names":["getUnsetStudents","gde","mjr","request","url","method","params","updateStudentInfo","data","updateStudentPassword","id","newPassword","getAllStudents","updateStudentInfoByAdmin","resetStudentPassword","deleteStudent","addStudent","bulkCreateStudents","router","useRouter","userStore","useUserStore","loading","ref","groupInfo","members","submitting","isUnmounted","isLeader","computed","userInfo","currentUserId","stu_id","value","some","member","stu_lead","assignedTeacher","hasAssignedTeacher","tea_id","getGroupInfo","async","groupId","stu_group","push","group","groupMembers","teacher","Promise","all","getGroupById","getGroupStudents","getGroupTeacher","selectedTeachers","preselectInfo","getPreselectRecord","teachers","error","response","status","ElMessage","editDialogVisible","editFormRef","editForm","group_name","group_title","group_info","editRules","required","message","trigger","max","handleEditInfo","major","grade","submitEdit","validate","valid","updateGroupInfo","success","addMemberDialogVisible","selectedStudents","availableStudents","searchStudentKeyword","memberTableRef","filteredStudents","keyword","toLowerCase","filter","student","stu_num","includes","stu_name","handleSelectionChange","selection","maxMembers","configInfo","max_group_member","remainingSlots","length","map","warning","nextTick","forEach","find","s","toggleRowSelection","disabled","submitAddMembers","stu_gde","stu_mjr","unsetStudents","stillUnsetIds","validSelectedIds","invalidStudents","ElMessageBox","alert","join","then","handleAddMember","console","log","group_id","studentIds","addGroupMembers","selectTeacherDialogVisible","availableTeachers","selectTeacher","isTeacherSelected","maxChoice","max_stu_choice","handleTeacherDialogClose","submitTeacherSelection","preselectTeachers","t","handleEditDialogClose","handleAddMemberDialogClose","getVolunteerType","index","types","type","class","safeRouterPush","path","onBeforeUnmount","window","_routeChanging","onMounted","storedUserInfo","getCookie","JSON","parse","handleRemoveMember","confirm","confirmButtonText","cancelButtonText","removeGroupMember","handleQuit","handleDismiss","dismissGroup","students","teacherId","getVolunteerText","findIndex","removeTeacher","splice","handlePreselectTeacher","getTeachersByMajor","__exports__"],"sourceRoot":""}