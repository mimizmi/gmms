{"version":3,"file":"js/509.6030b9cb.js","mappings":"uIAIAA,EAAQ,EAAU,CAACC,EAAKC,KACpB,MAAMC,EAASF,EAAIG,WAAaH,EAChC,IAAK,MAAOI,EAAKC,KAAQJ,EACrBC,EAAOE,GAAOC,EAElB,OAAOH,CAAM,C,qQCNV,SAASI,EAAiBC,EAAKC,GACpC,OAAOC,EAAAA,EAAAA,GAAQ,CACbC,IAAK,yBACLC,OAAQ,MACRC,OAAQ,CACNL,MACAC,QAGN,CAGO,SAASK,EAAkBC,GAChC,OAAOL,EAAAA,EAAAA,GAAQ,CACbC,IAAK,2BACLC,OAAQ,OACRG,QAEJ,CAGO,SAASC,EAAsBC,EAAIC,GACxC,OAAOR,EAAAA,EAAAA,GAAQ,CACbC,IAAK,+BACLC,OAAQ,OACRC,OAAQ,CACNI,KACAC,gBAGN,CAYO,SAASC,IACd,OAAOT,EAAAA,EAAAA,GAAQ,CACbC,IAAK,eACLC,OAAQ,OAEZ,CAGO,SAASQ,EAAyBH,EAAIF,GAC3C,OAAOL,EAAAA,EAAAA,GAAQ,CACbC,IAAK,uBAAuBM,IAC5BL,OAAQ,OACRG,QAEJ,CAGO,SAASM,EAAqBJ,EAAIC,GACvC,OAAOR,EAAAA,EAAAA,GAAQ,CACbC,IAAK,+BACLC,OAAQ,OACRC,OAAQ,CACNI,KACAC,gBAGN,CAGO,SAASI,EAAcL,GAC5B,OAAOP,EAAAA,EAAAA,GAAQ,CACbC,IAAK,uBAAuBM,IAC5BL,OAAQ,QAEZ,CAGO,SAASW,EAAWR,GACzB,OAAOL,EAAAA,EAAAA,GAAQ,CACbC,IAAK,eACLC,OAAQ,OACRG,QAEJ,CAGO,SAASS,EAAmBT,GACjC,OAAOL,EAAAA,EAAAA,GAAQ,CACbC,IAAK,2BACLC,OAAQ,OACRG,QAEJ,C,8JCyHAU,EAAe,CACbC,KAAM,mB,gCAhIR,MAAMC,GAAYC,EAAAA,EAAAA,KACZC,GAAUC,EAAAA,EAAAA,KAAI,GACdC,GAAkBD,EAAAA,EAAAA,KAAI,GACtBE,GAAYF,EAAAA,EAAAA,KAAI,GAChBG,GAAcH,EAAAA,EAAAA,IAAI,MAClBI,GAAkBJ,EAAAA,EAAAA,IAAI,MAGtBK,GAAWC,EAAAA,EAAAA,IAAS,IACrBT,EAAUU,WAGTC,EAAY,CAChBC,UAAW,CACT,CAAEC,UAAU,EAAMC,QAAS,UAAWC,QAAS,QAC/C,CAAEC,QAAS,gBAAiBF,QAAS,aAAcC,QAAS,SAE9DE,SAAU,CACR,CAAEC,IAAK,IAAKJ,QAAS,iBAAkBC,QAAS,UAK9CI,GAAeV,EAAAA,EAAAA,IAAS,CAC5BlB,YAAa,GACb6B,gBAAiB,KAGbC,EAAgB,CACpB9B,YAAa,CACX,CAAEsB,UAAU,EAAMC,QAAS,SAAUC,QAAS,QAC9C,CAAEO,IAAK,EAAGR,QAAS,aAAcC,QAAS,SAE5CK,gBAAiB,CACf,CAAEP,UAAU,EAAMC,QAAS,WAAYC,QAAS,QAChD,CACEQ,UAAWA,CAACC,EAAMC,EAAOC,KACnBD,IAAUN,EAAa5B,YACzBmC,EAAS,IAAIC,MAAM,eAEnBD,GACF,EAEFX,QAAS,UAMTa,EAAaA,KACjBvB,EAAUoB,OAAQ,CAAI,EAGlBI,EAAaA,KACjBxB,EAAUoB,OAAQ,EAClBK,OAAOC,OAAOvB,EAAUR,EAAUU,SAAS,EAGvCsB,EAAaC,UACjB,GAAK3B,EAAYmB,MAEjB,UACQnB,EAAYmB,MAAMS,WACxBhC,EAAQuB,OAAQ,QACVtC,EAAAA,EAAAA,IAAkBqB,GACxB2B,EAAAA,GAAUC,QAAQ,QAClBpC,EAAUU,SAAW,IAAKF,IAC1B6B,EAAAA,EAAAA,IAAU,WAAYC,KAAKC,UAAU/B,IACrCH,EAAUoB,OAAQ,CACpB,CAAE,MAAOe,GACPL,EAAAA,GAAUK,MAAM,OAClB,CAAE,QACAtC,EAAQuB,OAAQ,CAClB,GAIIgB,EAAiBR,UACrB,GAAK1B,EAAgBkB,MAErB,UACQlB,EAAgBkB,MAAMS,WAC5B9B,EAAgBqB,OAAQ,QAClBpC,EAAAA,EAAAA,IAAsBW,EAAUU,SAASgC,OAAQvB,EAAa5B,aACpE4C,EAAAA,GAAUC,QAAQ,UAClBjB,EAAa5B,YAAc,GAC3B4B,EAAaC,gBAAkB,GAC/Bb,EAAgBkB,MAAMkB,aACxB,CAAE,MAAOH,GACPL,EAAAA,GAAUK,MAAM,SAClB,CAAE,QACApC,EAAgBqB,OAAQ,CAC1B,GAGImB,GAAYzC,EAAAA,EAAAA,IAAI,Q,gvFCpLtB,MAAM0C,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,O","sources":["webpack://gdmu-mentor-selection/./node_modules/vue-loader/dist/exportHelper.js","webpack://gdmu-mentor-selection/./src/api/student.js","webpack://gdmu-mentor-selection/./src/views/student/student-settings.vue","webpack://gdmu-mentor-selection/./src/views/student/student-settings.vue?71d0"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// runtime helper for setting properties on components\n// in a tree-shakable way\nexports.default = (sfc, props) => {\n    const target = sfc.__vccOpts || sfc;\n    for (const [key, val] of props) {\n        target[key] = val;\n    }\n    return target;\n};\n","import request from '@/utils/request'\r\n\r\n// 获取未分组的学生\r\nexport function getUnsetStudents(gde, mjr) {\r\n  return request({\r\n    url: '/api/Student/get-unset',\r\n    method: 'get',\r\n    params: {\r\n      gde,\r\n      mjr\r\n    }\r\n  })\r\n}\r\n\r\n// 更新学生信息\r\nexport function updateStudentInfo(data) {\r\n  return request({\r\n    url: '/api/Student/update-info',\r\n    method: 'post',\r\n    data\r\n  })\r\n}\r\n\r\n// 更新学生密码\r\nexport function updateStudentPassword(id, newPassword) {\r\n  return request({\r\n    url: '/api/Student/update-password',\r\n    method: 'post',\r\n    params: {\r\n      id,\r\n      newPassword\r\n    }\r\n  })\r\n}\r\n\r\n// 获取登录记录\r\nexport function getLoginRecord(account) {\r\n  return request({\r\n    url: '/api/Student/login-record',\r\n    method: 'get',\r\n    params: { account }\r\n  })\r\n}\r\n\r\n// 获取所有学生\r\nexport function getAllStudents() {\r\n  return request({\r\n    url: '/api/Student',\r\n    method: 'get'\r\n  })\r\n}\r\n\r\n// 更新学生信息\r\nexport function updateStudentInfoByAdmin(id, data) {\r\n  return request({\r\n    url: `/api/Student/update/${id}`,\r\n    method: 'post',\r\n    data\r\n  })\r\n}\r\n\r\n// 重置学生密码\r\nexport function resetStudentPassword(id, newPassword) {\r\n  return request({\r\n    url: '/api/Student/update-password',\r\n    method: 'post',\r\n    params: {\r\n      id,\r\n      newPassword\r\n    }\r\n  })\r\n}\r\n\r\n// 删除学生\r\nexport function deleteStudent(id) {\r\n  return request({\r\n    url: `/api/Student/delete/${id}`,\r\n    method: 'post'\r\n  })\r\n}\r\n\r\n// 添加单个学生\r\nexport function addStudent(data) {\r\n  return request({\r\n    url: '/api/Student',\r\n    method: 'post',\r\n    data\r\n  })\r\n}\r\n\r\n// 批量添加学生\r\nexport function bulkCreateStudents(data) {\r\n  return request({\r\n    url: '/api/Student/bulk-create',\r\n    method: 'post',\r\n    data\r\n  })\r\n} ","<template>\r\n  <div class=\"settings\">\r\n    <el-card>\r\n      <template #header>\r\n        <div class=\"card-header\">\r\n          <h3>个人设置</h3>\r\n        </div>\r\n      </template>\r\n\r\n      <el-tabs v-model=\"activeTab\">\r\n        <!-- 个人信息设置 -->\r\n        <el-tab-pane label=\"信息设置\" name=\"info\">\r\n          <el-form \r\n            ref=\"infoFormRef\"\r\n            :model=\"infoForm\"\r\n            :rules=\"infoRules\"\r\n            label-width=\"100px\"\r\n          >\r\n            <el-form-item label=\"姓名\">\r\n              <el-input v-model=\"infoForm.stu_name\" disabled />\r\n            </el-form-item>\r\n            <el-form-item label=\"学号\">\r\n              <el-input v-model=\"infoForm.stu_num\" disabled />\r\n            </el-form-item>\r\n            <el-form-item label=\"班级\">\r\n              <el-input v-model=\"infoForm.stu_cls\" disabled />\r\n            </el-form-item>\r\n            <el-form-item label=\"联系方式\" prop=\"stu_phone\">\r\n              <el-input v-model=\"infoForm.stu_phone\" :disabled=\"!isEditing\" />\r\n            </el-form-item>\r\n            <el-form-item>\r\n              <el-button type=\"primary\" @click=\"handleEdit\" v-if=\"!isEditing\">\r\n                修改信息\r\n              </el-button>\r\n              <template v-else>\r\n                <el-button @click=\"cancelEdit\">取消</el-button>\r\n                <el-button type=\"primary\" @click=\"submitEdit\" :loading=\"loading\">\r\n                  保存\r\n                </el-button>\r\n              </template>\r\n            </el-form-item>\r\n          </el-form>\r\n        </el-tab-pane>\r\n\r\n        <!-- 密码设置 -->\r\n        <el-tab-pane label=\"密码设置\" name=\"password\">\r\n          <el-form \r\n            ref=\"passwordFormRef\"\r\n            :model=\"passwordForm\"\r\n            :rules=\"passwordRules\"\r\n            label-width=\"100px\"\r\n          >\r\n            <el-form-item label=\"新密码\" prop=\"newPassword\">\r\n              <el-input \r\n                v-model=\"passwordForm.newPassword\"\r\n                type=\"password\"\r\n                show-password\r\n                placeholder=\"请输入新密码\"\r\n              />\r\n            </el-form-item>\r\n            <el-form-item label=\"确认密码\" prop=\"confirmPassword\">\r\n              <el-input \r\n                v-model=\"passwordForm.confirmPassword\"\r\n                type=\"password\"\r\n                show-password\r\n                placeholder=\"请再次输入新密码\"\r\n              />\r\n            </el-form-item>\r\n            <el-form-item>\r\n              <el-button \r\n                type=\"primary\" \r\n                @click=\"submitPassword\"\r\n                :loading=\"passwordLoading\"\r\n              >\r\n                修改密码\r\n              </el-button>\r\n            </el-form-item>\r\n          </el-form>\r\n        </el-tab-pane>\r\n      </el-tabs>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, reactive } from 'vue'\r\nimport { useUserStore } from '@/store/modules/user'\r\nimport { updateStudentInfo, updateStudentPassword } from '@/api/student'\r\nimport { ElMessage } from 'element-plus'\r\nimport { setCookie } from '@/utils/cookie'\r\n\r\nconst userStore = useUserStore()\r\nconst loading = ref(false)\r\nconst passwordLoading = ref(false)\r\nconst isEditing = ref(false)\r\nconst infoFormRef = ref(null)\r\nconst passwordFormRef = ref(null)\r\n\r\n// 个人信息表单\r\nconst infoForm = reactive({\r\n  ...userStore.userInfo\r\n})\r\n\r\nconst infoRules = {\r\n  stu_phone: [\r\n    { required: true, message: '请输入联系方式', trigger: 'blur' },\r\n    { pattern: /^1[3-9]\\d{9}$/, message: '请输入正确的手机号码', trigger: 'blur' }\r\n  ],\r\n  stu_info: [\r\n    { max: 200, message: '个人描述不能超过200个字符', trigger: 'blur' }\r\n  ]\r\n}\r\n\r\n// 密码表单\r\nconst passwordForm = reactive({\r\n  newPassword: '',\r\n  confirmPassword: ''\r\n})\r\n\r\nconst passwordRules = {\r\n  newPassword: [\r\n    { required: true, message: '请输入新密码', trigger: 'blur' },\r\n    { min: 6, message: '密码长度不能小于6位', trigger: 'blur' }\r\n  ],\r\n  confirmPassword: [\r\n    { required: true, message: '请再次输入新密码', trigger: 'blur' },\r\n    {\r\n      validator: (rule, value, callback) => {\r\n        if (value !== passwordForm.newPassword) {\r\n          callback(new Error('两次输入的密码不一致'))\r\n        } else {\r\n          callback()\r\n        }\r\n      },\r\n      trigger: 'blur'\r\n    }\r\n  ]\r\n}\r\n\r\n// 修改信息相关方法\r\nconst handleEdit = () => {\r\n  isEditing.value = true\r\n}\r\n\r\nconst cancelEdit = () => {\r\n  isEditing.value = false\r\n  Object.assign(infoForm, userStore.userInfo)\r\n}\r\n\r\nconst submitEdit = async () => {\r\n  if (!infoFormRef.value) return\r\n  \r\n  try {\r\n    await infoFormRef.value.validate()\r\n    loading.value = true\r\n    await updateStudentInfo(infoForm)\r\n    ElMessage.success('修改成功')\r\n    userStore.userInfo = { ...infoForm }\r\n    setCookie('userInfo', JSON.stringify(infoForm))\r\n    isEditing.value = false\r\n  } catch (error) {\r\n    ElMessage.error('修改失败')\r\n  } finally {\r\n    loading.value = false\r\n  }\r\n}\r\n\r\n// 修改密码相关方法\r\nconst submitPassword = async () => {\r\n  if (!passwordFormRef.value) return\r\n  \r\n  try {\r\n    await passwordFormRef.value.validate()\r\n    passwordLoading.value = true\r\n    await updateStudentPassword(userStore.userInfo.stu_id, passwordForm.newPassword)\r\n    ElMessage.success('密码修改成功')\r\n    passwordForm.newPassword = ''\r\n    passwordForm.confirmPassword = ''\r\n    passwordFormRef.value.resetFields()\r\n  } catch (error) {\r\n    ElMessage.error('密码修改失败')\r\n  } finally {\r\n    passwordLoading.value = false\r\n  }\r\n}\r\n\r\nconst activeTab = ref('info')  // 添加 tab 激活状态\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.settings {\r\n  .card-header {\r\n    h3 {\r\n      margin: 0;\r\n      color: #1890ff;\r\n    }\r\n  }\r\n\r\n  :deep(.el-tabs__nav-wrap::after) {\r\n    height: 1px;\r\n    background-color: #e8e8e8;\r\n  }\r\n\r\n  :deep(.el-tabs__item) {\r\n    font-size: 15px;\r\n    \r\n    &.is-active {\r\n      color: #1890ff;\r\n    }\r\n  }\r\n\r\n  :deep(.el-tabs__active-bar) {\r\n    background-color: #1890ff;\r\n  }\r\n}\r\n</style>\r\n\r\n<script>\r\nexport default {\r\n  name: 'StudentSettings'\r\n}\r\n</script> ","import script from \"./student-settings.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./student-settings.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./student-settings.vue?vue&type=style&index=0&id=76af946f&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-76af946f\"]])\n\nexport default __exports__"],"names":["exports","sfc","props","target","__vccOpts","key","val","getUnsetStudents","gde","mjr","request","url","method","params","updateStudentInfo","data","updateStudentPassword","id","newPassword","getAllStudents","updateStudentInfoByAdmin","resetStudentPassword","deleteStudent","addStudent","bulkCreateStudents","__default__","name","userStore","useUserStore","loading","ref","passwordLoading","isEditing","infoFormRef","passwordFormRef","infoForm","reactive","userInfo","infoRules","stu_phone","required","message","trigger","pattern","stu_info","max","passwordForm","confirmPassword","passwordRules","min","validator","rule","value","callback","Error","handleEdit","cancelEdit","Object","assign","submitEdit","async","validate","ElMessage","success","setCookie","JSON","stringify","error","submitPassword","stu_id","resetFields","activeTab","__exports__"],"sourceRoot":""}