{"version":3,"file":"js/302.eaddc08b.js","mappings":"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","sources":["webpack://gdmu-mentor-selection/./src/views/admin/manage/student-manage.vue","webpack://gdmu-mentor-selection/./src/views/admin/manage/student-manage.vue?4c88"],"sourcesContent":["<template>\r\n  <div class=\"student-manage\">\r\n    <div class=\"page-header\">\r\n      <h2>学生管理</h2>\r\n      <div class=\"header-desc\">管理所有学生信息，支持修改信息和重置密码</div>\r\n    </div>\r\n\r\n    <div class=\"filter-section\">\r\n      <el-form :inline=\"true\" :model=\"filterForm\" class=\"filter-form\">\r\n        <div class=\"filter-main\">\r\n          <el-form-item label=\"年级\">\r\n            <el-select \r\n              v-model=\"filterForm.grade\" \r\n              clearable \r\n              placeholder=\"选择年级\"\r\n              style=\"width: 160px\"\r\n            >\r\n              <el-option\r\n                v-for=\"grade in grades\"\r\n                :key=\"grade.gde_id\"\r\n                :label=\"`${grade.gde_value}级`\"\r\n                :value=\"grade.gde_value\"\r\n              />\r\n            </el-select>\r\n          </el-form-item>\r\n          <el-form-item label=\"专业\">\r\n            <el-select \r\n              v-model=\"filterForm.major\" \r\n              clearable \r\n              placeholder=\"选择专业\"\r\n              style=\"width: 240px\"\r\n            >\r\n              <el-option\r\n                v-for=\"major in majors\"\r\n                :key=\"major.mjr_id\"\r\n                :label=\"major.mjr_name\"\r\n                :value=\"major.mjr_name\"\r\n              />\r\n            </el-select>\r\n          </el-form-item>\r\n          <el-form-item label=\"搜索\">\r\n            <el-input\r\n              v-model=\"filterForm.keyword\"\r\n              placeholder=\"搜索学号/姓名\"\r\n              clearable\r\n              style=\"width: 200px\"\r\n            >\r\n              <template #prefix>\r\n                <el-icon><Search /></el-icon>\r\n              </template>\r\n            </el-input>\r\n          </el-form-item>\r\n          <el-form-item>\r\n            <el-checkbox v-model=\"filterForm.unsetOnly\">仅显示未分组学生</el-checkbox>\r\n            <el-checkbox v-model=\"filterForm.leaderOnly\" style=\"margin-left: 15px\">仅显示组长</el-checkbox>\r\n          </el-form-item>\r\n        </div>\r\n        <div class=\"filter-actions\">\r\n          <el-form-item>\r\n            <el-button type=\"primary\" @click=\"handleSearch\">\r\n              <el-icon><Search /></el-icon>\r\n              搜索\r\n            </el-button>\r\n            <el-button type=\"success\" @click=\"resetFilter\">\r\n              <el-icon><Refresh /></el-icon>\r\n              重置筛选\r\n            </el-button>\r\n            <el-button type=\"primary\" @click=\"getStudents\">\r\n              <el-icon><Refresh /></el-icon>\r\n              刷新数据\r\n            </el-button>\r\n          </el-form-item>\r\n          <el-form-item>\r\n            <el-button type=\"success\" @click=\"handleAdd\">\r\n              <el-icon><Plus /></el-icon>\r\n              添加学生\r\n            </el-button>\r\n            <el-button type=\"warning\" @click=\"handleImport\">\r\n              <el-icon><Upload /></el-icon>\r\n              批量导入\r\n            </el-button>\r\n          </el-form-item>\r\n        </div>\r\n      </el-form>\r\n    </div>\r\n\r\n    <el-table\r\n      :data=\"currentPageData\"\r\n      stripe\r\n      v-loading=\"loading\"\r\n      style=\"width: 100%\"\r\n      :header-cell-style=\"{\r\n        background: '#fafafa',\r\n        color: '#606266',\r\n        fontWeight: 600\r\n      }\"\r\n      :cell-style=\"{\r\n        padding: '12px 0',\r\n        fontSize: '14px'\r\n      }\"\r\n      border\r\n    >\r\n      <el-table-column prop=\"stu_num\" label=\"学号\" width=\"120\" />\r\n      <el-table-column prop=\"stu_name\" label=\"姓名\" width=\"100\" />\r\n      <el-table-column prop=\"stu_gde\" label=\"年级\" width=\"100\">\r\n        <template #default=\"{ row }\">\r\n          {{ row.stu_gde }}级\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column prop=\"stu_mjr\" label=\"专业\" min-width=\"180\" />\r\n      <el-table-column prop=\"stu_cls\" label=\"班级\" width=\"80\" />\r\n      <el-table-column prop=\"stu_phone\" label=\"联系方式\" width=\"120\" />\r\n      <el-table-column prop=\"stu_group\" label=\"小组\" width=\"100\">\r\n        <template #default=\"{ row }\">\r\n          <el-tag :type=\"row.stu_group ? 'success' : 'warning'\" effect=\"dark\">\r\n            {{ row.stu_group ? `${row.stu_group}号小组` : '未分组' }}\r\n          </el-tag>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"组长\" width=\"80\">\r\n        <template #default=\"{ row }\">\r\n          <el-tag \r\n            :type=\"row.stu_lead ? 'success' : 'info'\"\r\n            effect=\"dark\"\r\n          >\r\n            {{ row.stu_lead ? '是' : '否' }}\r\n          </el-tag>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"操作\" width=\"200\" fixed=\"right\">\r\n        <template #default=\"{ row }\">\r\n          <el-button \r\n            type=\"primary\" \r\n            link\r\n            @click=\"handleEdit(row)\"\r\n          >\r\n            编辑\r\n          </el-button>\r\n          <el-button \r\n            type=\"warning\" \r\n            link\r\n            @click=\"handleResetPassword(row)\"\r\n          >\r\n            重置密码\r\n          </el-button>\r\n          <el-button \r\n            type=\"danger\" \r\n            link\r\n            @click=\"handleDelete(row)\"\r\n          >\r\n            删除\r\n          </el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <div class=\"pagination\">\r\n      <el-pagination\r\n        v-model:current-page=\"currentPage\"\r\n        v-model:page-size=\"pageSize\"\r\n        :total=\"filteredStudents.length\"\r\n        :page-sizes=\"[10, 20, 30, 50]\"\r\n        layout=\"total, sizes, prev, pager, next, jumper\"\r\n        @size-change=\"handleSizeChange\"\r\n        @current-change=\"handleCurrentChange\"\r\n      />\r\n    </div>\r\n\r\n    <!-- 编辑对话框 -->\r\n    <el-dialog\r\n      v-model=\"editDialogVisible\"\r\n      title=\"编辑学生信息\"\r\n      width=\"50%\"\r\n    >\r\n      <el-form\r\n        ref=\"editFormRef\"\r\n        :model=\"editForm\"\r\n        :rules=\"editRules\"\r\n        label-width=\"100px\"\r\n      >\r\n        <el-form-item label=\"学号\" prop=\"stu_num\">\r\n          <el-input v-model=\"editForm.stu_num\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"姓名\" prop=\"stu_name\">\r\n          <el-input v-model=\"editForm.stu_name\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"年级\" prop=\"stu_gde\">\r\n          <el-select v-model=\"editForm.stu_gde\" style=\"width: 100%\">\r\n            <el-option\r\n              v-for=\"grade in grades\"\r\n              :key=\"grade.gde_id\"\r\n              :label=\"`${grade.gde_value}级`\"\r\n              :value=\"grade.gde_value\"\r\n            />\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"专业\" prop=\"stu_mjr\">\r\n          <el-select v-model=\"editForm.stu_mjr\" style=\"width: 100%\">\r\n            <el-option\r\n              v-for=\"major in majors\"\r\n              :key=\"major.mjr_id\"\r\n              :label=\"major.mjr_name\"\r\n              :value=\"major.mjr_name\"\r\n            />\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"班级\" prop=\"stu_cls\">\r\n          <el-input-number \r\n            v-model=\"editForm.stu_cls\" \r\n            :min=\"1\" \r\n            :max=\"100\" \r\n            style=\"width: 100%\"\r\n          />\r\n        </el-form-item>\r\n        <el-form-item label=\"联系方式\" prop=\"stu_phone\">\r\n          <el-input v-model=\"editForm.stu_phone\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"组长\" v-if=\"editForm.stu_group\">\r\n          <el-switch\r\n            v-model=\"editForm.stu_lead\"\r\n            active-text=\"是\"\r\n            inactive-text=\"否\"\r\n            :active-value=\"true\"\r\n            :inactive-value=\"false\"\r\n          />\r\n        </el-form-item>\r\n      </el-form>\r\n      <template #footer>\r\n        <el-button @click=\"editDialogVisible = false\">取消</el-button>\r\n        <el-button \r\n          type=\"primary\" \r\n          @click=\"submitEdit\"\r\n          :loading=\"submitLoading\"\r\n        >\r\n          确定\r\n        </el-button>\r\n      </template>\r\n    </el-dialog>\r\n\r\n    <!-- 批量导入对话框 -->\r\n    <el-dialog\r\n      v-model=\"importDialogVisible\"\r\n      title=\"批量导入学生\"\r\n      width=\"50%\"\r\n    >\r\n      <el-form\r\n        ref=\"importFormRef\"\r\n        :model=\"importForm\"\r\n        :rules=\"importRules\"\r\n        label-width=\"100px\"\r\n      >\r\n        <el-form-item label=\"年级\" prop=\"grade\">\r\n          <el-select v-model=\"importForm.grade\" style=\"width: 100%\">\r\n            <el-option\r\n              v-for=\"grade in grades\"\r\n              :key=\"grade.gde_id\"\r\n              :label=\"`${grade.gde_value}级`\"\r\n              :value=\"grade.gde_id\"\r\n            />\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"专业\" prop=\"major\">\r\n          <el-select v-model=\"importForm.major\" style=\"width: 100%\">\r\n            <el-option\r\n              v-for=\"major in majors\"\r\n              :key=\"major.mjr_id\"\r\n              :label=\"major.mjr_name\"\r\n              :value=\"major.mjr_id\"\r\n            />\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"Excel文件\" prop=\"file\">\r\n          <el-upload\r\n            class=\"upload-demo\"\r\n            action=\"#\"\r\n            :auto-upload=\"false\"\r\n            :on-change=\"handleFileChange\"\r\n            :limit=\"1\"\r\n            accept=\".xlsx,.xls\"\r\n          >\r\n            <template #trigger>\r\n              <el-button type=\"primary\">选择文件</el-button>\r\n            </template>\r\n            <template #tip>\r\n              <div class=\"el-upload__tip\">\r\n                请上传Excel文件，文件大小不超过10MB\r\n              </div>\r\n            </template>\r\n          </el-upload>\r\n        </el-form-item>\r\n      </el-form>\r\n      <template #footer>\r\n        <el-button \r\n          type=\"primary\" \r\n          @click=\"downloadTemplate\"\r\n        >\r\n          <el-icon><Download /></el-icon>\r\n          下载模板\r\n        </el-button>\r\n        <el-button @click=\"importDialogVisible = false\">取消</el-button>\r\n        <el-button \r\n          type=\"primary\" \r\n          @click=\"submitImport\"\r\n          :loading=\"importLoading\"\r\n        >\r\n          确定导入\r\n        </el-button>\r\n      </template>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, reactive, computed, onMounted } from 'vue'\r\nimport { getAllStudents, updateStudentInfoByAdmin, resetStudentPassword, deleteStudent, addStudent, bulkCreateStudents } from '@/api/student'\r\nimport { getAllGrades } from '@/api/grade'\r\nimport { getAllMajors } from '@/api/major'\r\nimport { ElMessage, ElMessageBox } from 'element-plus'\r\nimport { Search, Refresh, Plus, Upload, Download } from '@element-plus/icons-vue'\r\nimport * as XLSX from 'xlsx'\r\n\r\nconst loading = ref(false)\r\nconst submitLoading = ref(false)\r\nconst students = ref([])\r\nconst grades = ref([])\r\nconst majors = ref([])\r\n\r\n// 筛选表单\r\nconst filterForm = reactive({\r\n  grade: '',\r\n  major: '',\r\n  keyword: '',\r\n  unsetOnly: false,\r\n  leaderOnly: false\r\n})\r\n\r\n// 分页相关\r\nconst currentPage = ref(1)\r\nconst pageSize = ref(10)\r\n\r\n// 编辑相关\r\nconst editDialogVisible = ref(false)\r\nconst editFormRef = ref(null)\r\nconst originalData = ref(null)  // 保存原始数据\r\nconst editForm = reactive({\r\n  stu_id: '',\r\n  stu_num: '',\r\n  stu_name: '',\r\n  stu_gde: '',\r\n  stu_mjr: '',\r\n  stu_cls: 1,\r\n  stu_phone: '',\r\n  stu_group: null,\r\n  stu_lead: false,\r\n  stu_info: ''\r\n})\r\n\r\nconst editRules = {\r\n  stu_num: [\r\n    { required: true, message: '请输入学号', trigger: 'blur' },\r\n    { pattern: /^\\d{11}$/, message: '学号必须为11位数字', trigger: 'blur' }\r\n  ],\r\n  stu_name: [\r\n    { required: true, message: '请输入姓名', trigger: 'blur' }\r\n  ],\r\n  stu_gde: [\r\n    { required: true, message: '请选择年级', trigger: 'change' }\r\n  ],\r\n  stu_mjr: [\r\n    { required: true, message: '请选择专业', trigger: 'change' }\r\n  ],\r\n  stu_cls: [\r\n    { required: true, message: '请输入班级', trigger: 'blur' }\r\n  ],\r\n  stu_phone: [\r\n    { required: true, message: '请输入联系方式', trigger: 'blur' },\r\n    { pattern: /^1[3-9]\\d{9}$/, message: '请输入正确的手机号码', trigger: 'blur' }\r\n  ]\r\n}\r\n\r\n// 过滤后的学生列表\r\nconst filteredStudents = computed(() => {\r\n  let result = [...students.value]\r\n  \r\n  if (filterForm.grade) {\r\n    result = result.filter(student => student.stu_gde === filterForm.grade)\r\n  }\r\n  \r\n  if (filterForm.major) {\r\n    result = result.filter(student => student.stu_mjr === filterForm.major)\r\n  }\r\n  \r\n  if (filterForm.keyword) {\r\n    const keyword = filterForm.keyword.toLowerCase()\r\n    result = result.filter(student => \r\n      student.stu_num.toLowerCase().includes(keyword) ||\r\n      student.stu_name.toLowerCase().includes(keyword)\r\n    )\r\n  }\r\n  \r\n  if (filterForm.unsetOnly) {\r\n    result = result.filter(student => !student.stu_group)\r\n  }\r\n  \r\n  if (filterForm.leaderOnly) {\r\n    result = result.filter(student => student.stu_lead)\r\n  }\r\n  \r\n  return result\r\n})\r\n\r\n// 当前页数据\r\nconst currentPageData = computed(() => {\r\n  const start = (currentPage.value - 1) * pageSize.value\r\n  const end = start + pageSize.value\r\n  return filteredStudents.value.slice(start, end)\r\n})\r\n\r\n// 获取所有学生\r\nconst getStudents = async () => {\r\n  loading.value = true\r\n  try {\r\n    const [studentsData, gradesData, majorsData] = await Promise.all([\r\n      getAllStudents(),\r\n      getAllGrades(),\r\n      getAllMajors()\r\n    ])\r\n    students.value = studentsData\r\n    grades.value = gradesData\r\n    majors.value = majorsData\r\n  } catch (error) {\r\n    ElMessage.error('获取数据失败')\r\n  } finally {\r\n    loading.value = false\r\n  }\r\n}\r\n\r\n// 搜索\r\nconst handleSearch = () => {\r\n  currentPage.value = 1\r\n}\r\n\r\n// 重置筛选\r\nconst resetFilter = () => {\r\n  filterForm.grade = ''\r\n  filterForm.major = ''\r\n  filterForm.keyword = ''\r\n  filterForm.unsetOnly = false\r\n  filterForm.leaderOnly = false\r\n  currentPage.value = 1\r\n}\r\n\r\n// 编辑学生信息\r\nconst handleEdit = (row) => {\r\n  Object.assign(editForm, {\r\n    stu_id: row.stu_id,\r\n    stu_num: row.stu_num,\r\n    stu_name: row.stu_name,\r\n    stu_gde: row.stu_gde,\r\n    stu_mjr: row.stu_mjr,\r\n    stu_cls: row.stu_cls,\r\n    stu_phone: row.stu_phone,\r\n    stu_group: row.stu_group,\r\n    stu_lead: row.stu_lead,\r\n    stu_info: row.stu_info\r\n  })\r\n  originalData.value = { ...row }  // 保存原始数据的副本\r\n  editDialogVisible.value = true\r\n}\r\n\r\n// 提交编辑\r\nconst submitEdit = async () => {\r\n  if (!editFormRef.value) return\r\n  \r\n  try {\r\n    await editFormRef.value.validate()\r\n    submitLoading.value = true\r\n    // 找到对应的年级和专业ID\r\n    const gradeId = grades.value.find(g => g.gde_value === editForm.stu_gde)?.gde_id\r\n    const majorId = majors.value.find(m => m.mjr_name === editForm.stu_mjr)?.mjr_id\r\n    \r\n    if (!gradeId || !majorId) {\r\n      throw new Error('年级或专业信息错误')\r\n    }\r\n\r\n    const submitData = {\r\n      stu_num: editForm.stu_num,\r\n      stu_name: editForm.stu_name,\r\n      stu_gde: gradeId,\r\n      stu_mjr: majorId,\r\n      stu_cls: editForm.stu_cls,\r\n      stu_phone: editForm.stu_phone || '',\r\n      stu_info: editForm.stu_info || '',\r\n      stu_group: editForm.stu_group,\r\n      stu_lead: editForm.stu_lead\r\n    }\r\n\r\n    if (editForm.stu_id) {\r\n      await updateStudentInfoByAdmin(editForm.stu_id, submitData)\r\n      ElMessage.success('修改成功')\r\n    } else {\r\n      await addStudent(submitData)\r\n      ElMessage.success('添加成功')\r\n    }\r\n\r\n    editDialogVisible.value = false\r\n    getStudents()\r\n  } catch (error) {\r\n    ElMessage.error(error.message || '操作失败')\r\n  } finally {\r\n    submitLoading.value = false\r\n  }\r\n}\r\n\r\n// 重置密码\r\nconst handleResetPassword = async (row) => {\r\n  try {\r\n    await ElMessageBox.confirm(\r\n      `确定要将学生 ${row.stu_name}(${row.stu_num}) 的密码重置为学号后六位吗？`,\r\n      '提示',\r\n      {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }\r\n    )\r\n    \r\n    const newPassword = row.stu_num.slice(-6)\r\n    await resetStudentPassword(row.stu_id, newPassword)\r\n    ElMessage.success('密码重置成功')\r\n  } catch (error) {\r\n    if (error !== 'cancel') {\r\n      ElMessage.error('密码重置失败')\r\n    }\r\n  }\r\n}\r\n\r\n// 删除学生\r\nconst handleDelete = async (row) => {\r\n  try {\r\n    await ElMessageBox.confirm(\r\n      `确定要删除学生 ${row.stu_name}(${row.stu_num}) 吗？此操作不可恢复！`,\r\n      '警告',\r\n      {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }\r\n    )\r\n    \r\n    await deleteStudent(row.stu_id)\r\n    ElMessage.success('删除成功')\r\n    getStudents()\r\n  } catch (error) {\r\n    if (error !== 'cancel') {\r\n      ElMessage.error('删除失败')\r\n    }\r\n  }\r\n}\r\n\r\n// 分页处理\r\nconst handleSizeChange = (val) => {\r\n  pageSize.value = val\r\n  currentPage.value = 1\r\n}\r\n\r\nconst handleCurrentChange = (val) => {\r\n  currentPage.value = val\r\n}\r\n\r\n// 导入相关\r\nconst importDialogVisible = ref(false)\r\nconst importLoading = ref(false)\r\nconst importFormRef = ref(null)\r\nconst importForm = reactive({\r\n  grade: '',\r\n  major: '',\r\n  file: null\r\n})\r\n\r\nconst importRules = {\r\n  grade: [\r\n    { required: true, message: '请选择年级', trigger: 'change' }\r\n  ],\r\n  major: [\r\n    { required: true, message: '请选择专业', trigger: 'change' }\r\n  ],\r\n  file: [\r\n    { required: true, message: '请选择Excel文件', trigger: 'change' }\r\n  ]\r\n}\r\n\r\n// 添加学生\r\nconst handleAdd = () => {\r\n  editForm.stu_id = ''\r\n  editForm.stu_num = ''\r\n  editForm.stu_name = ''\r\n  editForm.stu_gde = ''\r\n  editForm.stu_mjr = ''\r\n  editForm.stu_cls = 1\r\n  editForm.stu_phone = ''\r\n  editForm.stu_info = ''\r\n  editDialogVisible.value = true\r\n}\r\n\r\n// 处理文件变化\r\nconst handleFileChange = (file) => {\r\n  importForm.file = file.raw\r\n}\r\n\r\n// 打开导入对话框\r\nconst handleImport = () => {\r\n  importForm.grade = ''\r\n  importForm.major = ''\r\n  importForm.file = null\r\n  importDialogVisible.value = true\r\n}\r\n\r\n// 下载模板\r\nconst downloadTemplate = () => {\r\n  const template = [\r\n    ['学号', '姓名', '班级', '联系方式', '备注'],\r\n    ['22209010008', '张三', '1', '13800138000', '']\r\n  ]\r\n  \r\n  const ws = XLSX.utils.aoa_to_sheet(template)\r\n  const wb = XLSX.utils.book_new()\r\n  XLSX.utils.book_append_sheet(wb, ws, '学生信息')\r\n  \r\n  // 设置列宽\r\n  ws['!cols'] = [\r\n    { wch: 15 },  // 学号\r\n    { wch: 10 },  // 姓名\r\n    { wch: 8 },   // 班级\r\n    { wch: 15 },  // 联系方式\r\n    { wch: 20 }   // 备注\r\n  ]\r\n  \r\n  XLSX.writeFile(wb, '学生信息导入模板.xlsx')\r\n}\r\n\r\n// 提交导入\r\nconst submitImport = async () => {\r\n  if (!importFormRef.value) return\r\n  \r\n  try {\r\n    await importFormRef.value.validate()\r\n    importLoading.value = true\r\n    \r\n    const reader = new FileReader()\r\n    reader.onload = async (e) => {\r\n      try {\r\n        const data = new Uint8Array(e.target.result)\r\n        const workbook = XLSX.read(data, { type: 'array' })\r\n        const worksheet = workbook.Sheets[workbook.SheetNames[0]]\r\n        // 获取数据，跳过表头\r\n        const jsonData = XLSX.utils.sheet_to_json(worksheet, { \r\n          range: 1,\r\n          header: ['学号', '姓名', '班级', '联系方式', '备注'] \r\n        })\r\n        \r\n        // 转换数据格式\r\n        const students = jsonData.filter(row => row['学号'] && row['姓名'] && row['班级']).map(row => {\r\n          // 验证数据格式\r\n          if (!/^\\d{11}$/.test(String(row['学号']))) {\r\n            throw new Error(`学号 ${row['学号']} 格式不正确，必须为11位数字`)\r\n          }\r\n          const cls = Number(row['班级'])\r\n          if (isNaN(cls) || cls < 1 || cls > 100) {\r\n            throw new Error(`班级 ${row['班级']} 格式不正确，必须为1-100之间的数字`)\r\n          }\r\n          \r\n          return {\r\n            stu_num: row['学号'],\r\n            stu_name: row['姓名'],\r\n            stu_gde: Number(importForm.grade),\r\n            stu_mjr: Number(importForm.major),\r\n            stu_cls: cls,\r\n            stu_phone: row['联系方式'],\r\n            stu_info: row['备注']\r\n          }\r\n        })\r\n        \r\n        if (students.length === 0) {\r\n          throw new Error('没有可导入的数据')\r\n        }\r\n        \r\n        await bulkCreateStudents(students)\r\n        ElMessage.success('导入成功')\r\n        importDialogVisible.value = false\r\n        getStudents()\r\n      } catch (error) {\r\n        ElMessage.error(error.message || '导入失败，请检查数据格式是否正确')\r\n      } finally {\r\n        importLoading.value = false\r\n      }\r\n    }\r\n    \r\n    reader.readAsArrayBuffer(importForm.file)\r\n  } catch (error) {\r\n    ElMessage.error('请检查表单填写是否正确')\r\n    importLoading.value = false\r\n  }\r\n}\r\n\r\nonMounted(() => {\r\n  getStudents()\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.student-manage {\r\n  .page-header {\r\n    margin-bottom: 20px;\r\n    padding: 20px;\r\n    background: #fff;\r\n    border-radius: 4px;\r\n    box-shadow: 0 2px 12px 0 rgba(0,0,0,0.1);\r\n\r\n    h2 {\r\n      margin: 0;\r\n      color: #1890ff;\r\n      font-size: 24px;\r\n      margin-bottom: 8px;\r\n    }\r\n\r\n    .header-desc {\r\n      color: #909399;\r\n      font-size: 14px;\r\n    }\r\n  }\r\n\r\n  .filter-section {\r\n    margin-bottom: 20px;\r\n    padding: 20px;\r\n    background: #fff;\r\n    border-radius: 4px;\r\n    box-shadow: 0 2px 12px 0 rgba(0,0,0,0.1);\r\n\r\n    .filter-form {\r\n      display: flex;\r\n      flex-direction: column;\r\n      gap: 15px;\r\n\r\n      .filter-main {\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        gap: 10px;\r\n      }\r\n\r\n      .filter-actions {\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        gap: 10px;\r\n        justify-content: flex-end;\r\n      }\r\n    }\r\n  }\r\n\r\n  :deep(.el-table) {\r\n    border-radius: 8px;\r\n    overflow: hidden;\r\n    \r\n    .el-table__header-wrapper {\r\n      th {\r\n        border-bottom: 2px solid #ebeef5;\r\n      }\r\n    }\r\n    \r\n    .el-table__body-wrapper {\r\n      td {\r\n        border-bottom: 1px solid #ebeef5;\r\n      }\r\n    }\r\n    \r\n    .el-table__row:hover > td {\r\n      background: #f5f7fa !important;\r\n    }\r\n  }\r\n\r\n  .pagination {\r\n    margin-top: 20px;\r\n    display: flex;\r\n    justify-content: flex-end;\r\n  }\r\n}\r\n</style>","import script from \"./student-manage.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./student-manage.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./student-manage.vue?vue&type=style&index=0&id=448913ea&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-448913ea\"]])\n\nexport default __exports__"],"names":["loading","ref","submitLoading","students","grades","majors","filterForm","reactive","grade","major","keyword","unsetOnly","leaderOnly","currentPage","pageSize","editDialogVisible","editFormRef","originalData","editForm","stu_id","stu_num","stu_name","stu_gde","stu_mjr","stu_cls","stu_phone","stu_group","stu_lead","stu_info","editRules","required","message","trigger","pattern","filteredStudents","computed","result","value","filter","student","toLowerCase","includes","currentPageData","start","end","slice","getStudents","async","studentsData","gradesData","majorsData","Promise","all","getAllStudents","getAllGrades","getAllMajors","error","ElMessage","handleSearch","resetFilter","handleEdit","row","Object","assign","submitEdit","validate","gradeId","find","g","gde_value","gde_id","majorId","m","mjr_name","mjr_id","Error","submitData","updateStudentInfoByAdmin","success","addStudent","handleResetPassword","ElMessageBox","confirm","confirmButtonText","cancelButtonText","type","newPassword","resetStudentPassword","handleDelete","deleteStudent","handleSizeChange","val","handleCurrentChange","importDialogVisible","importLoading","importFormRef","importForm","file","importRules","handleAdd","handleFileChange","raw","handleImport","downloadTemplate","template","ws","XLSX","aoa_to_sheet","wb","book_new","book_append_sheet","wch","submitImport","reader","FileReader","onload","data","Uint8Array","e","target","workbook","worksheet","Sheets","SheetNames","jsonData","sheet_to_json","range","header","map","test","String","cls","Number","isNaN","length","bulkCreateStudents","readAsArrayBuffer","onMounted","__exports__"],"sourceRoot":""}