{"version":3,"file":"js/142.ff4b7900.js","mappings":"uIAIAA,EAAQ,EAAU,CAACC,EAAKC,KACpB,MAAMC,EAASF,EAAIG,WAAaH,EAChC,IAAK,MAAOI,EAAKC,KAAQJ,EACrBC,EAAOE,GAAOC,EAElB,OAAOH,CAAM,C,qECNV,SAASI,IACd,OAAOC,EAAAA,EAAAA,GAAQ,CACbC,IAAK,qBACLC,OAAQ,OAEZ,C,ifCgHA,MAAMC,GAAYC,EAAAA,EAAAA,KACZC,GAAUC,EAAAA,EAAAA,KAAI,GACdC,GAAgBD,EAAAA,EAAAA,KAAI,GACpBE,GAASF,EAAAA,EAAAA,IAAI,IACbG,GAAgBH,EAAAA,EAAAA,IAAI,IACpBI,GAAgBJ,EAAAA,EAAAA,KAAI,GACpBK,GAAgBL,EAAAA,EAAAA,IAAI,MACpBM,GAAeN,EAAAA,EAAAA,IAAI,IAGnBO,GAASP,EAAAA,EAAAA,IAAI,IAGbQ,EAAYC,UAChB,IACE,MAAMC,QAAYjB,EAAAA,EAAAA,KAClBc,EAAOI,MAAQD,EAAIE,KAAIC,GAASA,EAAMC,WACxC,CAAE,MAAOC,GACPC,QAAQD,MAAM,YAAaA,GAC3BE,EAAAA,GAAUF,MAAM,WAClB,GAIIG,EAAYT,UAChB,GAAKZ,EAAUsB,SAAf,CAEApB,EAAQY,OAAQ,EAChB,IACE,MAAMD,QAAYU,EAAAA,EAAAA,IAAiBvB,EAAUsB,SAASE,OAAQR,GAExDS,QAA0BC,QAAQC,KACrCd,GAAO,IAAIE,KAAIH,UACd,IACE,MAAMgB,QAAkBC,EAAAA,EAAAA,IAAaC,GACrC,OAAOF,CACT,CAAE,MAAOV,GAEP,OADAC,QAAQD,MAAM,YAAaA,GACpB,IACT,MAIJb,EAAOS,MAAQW,EAAkBM,QAAOC,GAAmB,OAAVA,GACnD,CAAE,MAAOd,GACPC,QAAQD,MAAM,YAAaA,GAC3BE,EAAAA,GAAUF,MAAM,YAChBb,EAAOS,MAAQ,EACjB,CAAE,QACAZ,EAAQY,OAAQ,CAClB,CAzB+B,CAyB/B,EAIImB,EAAkBrB,UACtBJ,EAAcM,MAAQkB,EACtB5B,EAAcU,OAAQ,EACtB,IACE,MAAOc,EAAWM,SAAiBR,QAAQC,IAAI,EAC7CE,EAAAA,EAAAA,IAAaG,EAAMG,WACnBC,EAAAA,EAAAA,IAAiBJ,EAAMG,YAEzBE,OAAOC,OAAO9B,EAAcM,MAAOc,GACnCnB,EAAaK,MAAQoB,EACrB3B,EAAcO,OAAQ,CACxB,CAAE,MAAOI,GACPE,EAAAA,GAAUF,MAAM,WAClB,CAAE,QACAd,EAAcU,OAAQ,CACxB,GAIIyB,EAAqBzB,IACzBO,EAAUP,EAAM,EAIZ0B,EAAcA,KAClBnB,EAAUf,EAAcQ,MAAM,EAI1B2B,EAAoBA,KACxBjC,EAAcM,MAAQ,KACtBL,EAAaK,MAAQ,EAAE,EAGnB4B,GAAQC,EAAAA,EAAAA,M,OAEdC,EAAAA,EAAAA,KAAUhC,gBACFD,IAEF+B,EAAMG,MAAM7B,OACdV,EAAcQ,MAAQ4B,EAAMG,MAAM7B,MAClCK,EAAUf,EAAcQ,QAGjBJ,EAAOI,MAAMgC,SACpBxC,EAAcQ,MAAQJ,EAAOI,MAAM,GACnCO,EAAUf,EAAcQ,OAC1B,I,8jHCvNF,MAAMiC,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,O","sources":["webpack://gdmu-mentor-selection/./node_modules/vue-loader/dist/exportHelper.js","webpack://gdmu-mentor-selection/./src/api/grade.js","webpack://gdmu-mentor-selection/./src/views/teacher/my-groups.vue","webpack://gdmu-mentor-selection/./src/views/teacher/my-groups.vue?b2d8"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// runtime helper for setting properties on components\n// in a tree-shakable way\nexports.default = (sfc, props) => {\n    const target = sfc.__vccOpts || sfc;\n    for (const [key, val] of props) {\n        target[key] = val;\n    }\n    return target;\n};\n","import request from '@/utils/request'\r\n\r\n// 获取所有年级\r\nexport function getAllGrades() {\r\n  return request({\r\n    url: '/api/Grade/get-all',\r\n    method: 'get'\r\n  })\r\n} ","<template>\r\n  <div class=\"my-groups\">\r\n    <!-- 顶部操作栏 -->\r\n    <el-card class=\"action-bar\">\r\n      <div class=\"bar-container\">\r\n        <!-- 左侧标题 -->\r\n        <div class=\"bar-title\">\r\n          <h2>我的小组</h2>\r\n        </div>\r\n\r\n        <!-- 年级筛选 -->\r\n        <div class=\"filter-area\">\r\n          <el-select \r\n            v-model=\"selectedGrade\"\r\n            placeholder=\"选择年级\"\r\n            clearable\r\n            @change=\"handleGradeChange\"\r\n            :disabled=\"loading\"\r\n          >\r\n            <el-option\r\n              v-for=\"grade in grades\"\r\n              :key=\"grade\"\r\n              :label=\"`${grade}级`\"\r\n              :value=\"grade\"\r\n            />\r\n          </el-select>\r\n          <el-button \r\n            @click=\"refreshList\"\r\n            :loading=\"loading\"\r\n          >\r\n            <el-icon><Refresh /></el-icon>\r\n            刷新\r\n          </el-button>\r\n        </div>\r\n      </div>\r\n    </el-card>\r\n\r\n    <!-- 小组列表 -->\r\n    <div class=\"group-list\" v-loading=\"loading\">\r\n      <el-empty \r\n        v-if=\"!groups.length\" \r\n        description=\"暂无分配的小组\"\r\n      />\r\n      <el-row v-else :gutter=\"20\">\r\n        <el-col :span=\"8\" v-for=\"group in groups\" :key=\"group.group_id\">\r\n          <el-card class=\"group-card\" shadow=\"hover\">\r\n            <template #header>\r\n              <div class=\"card-header\">\r\n                <span class=\"group-name\">{{ group.group_name }}</span>\r\n                <el-tag size=\"small\" type=\"success\">{{ group.group_id }}号小组</el-tag>\r\n              </div>\r\n            </template>\r\n            <div class=\"card-content\">\r\n              <h4 class=\"group-title\">{{ group.group_title }}</h4>\r\n              <p class=\"group-info\">{{ group.group_info }}</p>\r\n              <div class=\"group-meta\">\r\n                <el-tag size=\"small\">{{ group.major }}</el-tag>\r\n                <el-tag size=\"small\" type=\"info\">{{ group.grade }}级</el-tag>\r\n              </div>\r\n              <div class=\"card-footer\">\r\n                <el-button type=\"primary\" link @click=\"viewGroupDetail(group)\">\r\n                  查看详情\r\n                </el-button>\r\n              </div>\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n      </el-row>\r\n    </div>\r\n\r\n    <!-- 小组详情对话框 -->\r\n    <el-dialog\r\n      v-model=\"dialogVisible\"\r\n      title=\"小组详情\"\r\n      width=\"50%\"\r\n      @closed=\"handleDialogClose\"\r\n    >\r\n      <div v-loading=\"detailLoading\">\r\n        <template v-if=\"selectedGroup\">\r\n          <el-descriptions :column=\"2\" border>\r\n            <el-descriptions-item label=\"小组名称\">{{ selectedGroup.group_name }}</el-descriptions-item>\r\n            <el-descriptions-item label=\"小组编号\">{{ selectedGroup.group_id }}</el-descriptions-item>\r\n            <el-descriptions-item label=\"选题\">{{ selectedGroup.group_title }}</el-descriptions-item>\r\n            <el-descriptions-item label=\"描述\" class=\"group-description\">\r\n              {{ selectedGroup.group_info }}\r\n            </el-descriptions-item>\r\n          </el-descriptions>\r\n\r\n          <template v-if=\"groupMembers.length\">\r\n            <h4 class=\"member-title\">小组成员</h4>\r\n            <el-table :data=\"groupMembers\" stripe style=\"width: 100%\">\r\n              <el-table-column prop=\"stu_name\" label=\"姓名\" />\r\n              <el-table-column prop=\"stu_num\" label=\"学号\" />\r\n              <el-table-column prop=\"stu_cls\" label=\"班级\" />\r\n              <el-table-column prop=\"stu_phone\" label=\"联系方式\" />\r\n              <el-table-column label=\"身份\">\r\n                <template #default=\"scope\">\r\n                  <el-tag :type=\"scope.row.stu_lead ? 'success' : ''\">\r\n                    {{ scope.row.stu_lead ? '组长' : '组员' }}\r\n                  </el-tag>\r\n                </template>\r\n              </el-table-column>\r\n            </el-table>\r\n          </template>\r\n        </template>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue'\r\nimport { useUserStore } from '@/store/modules/user'\r\nimport { getTeacherGroups } from '@/api/teacher'\r\nimport { getGroupById, getGroupStudents } from '@/api/group'\r\nimport { getAllGrades } from '@/api/grade'\r\nimport { ElMessage } from 'element-plus'\r\nimport { Refresh } from '@element-plus/icons-vue'\r\nimport { useRoute } from 'vue-router'\r\n\r\nconst userStore = useUserStore()\r\nconst loading = ref(false)\r\nconst detailLoading = ref(false)\r\nconst groups = ref([])\r\nconst selectedGrade = ref('')\r\nconst dialogVisible = ref(false)\r\nconst selectedGroup = ref(null)\r\nconst groupMembers = ref([])\r\n\r\n// 年级列表\r\nconst grades = ref([])\r\n\r\n// 获取年级列表\r\nconst getGrades = async () => {\r\n  try {\r\n    const res = await getAllGrades()\r\n    grades.value = res.map(grade => grade.gde_value)\r\n  } catch (error) {\r\n    console.error('获取年级列表失败:', error)\r\n    ElMessage.error('获取年级列表失败')\r\n  }\r\n}\r\n\r\n// 获取小组列表\r\nconst getGroups = async (grade) => {\r\n  if (!userStore.userInfo) return\r\n  \r\n  loading.value = true\r\n  try {\r\n    const res = await getTeacherGroups(userStore.userInfo.tea_id, grade)\r\n    // 获取每个小组的详细信息\r\n    const groupsWithDetails = await Promise.all(\r\n      (res || []).map(async (groupId) => {\r\n        try {\r\n          const groupInfo = await getGroupById(groupId)\r\n          return groupInfo\r\n        } catch (error) {\r\n          console.error('获取小组详情失败:', error)\r\n          return null\r\n        }\r\n      })\r\n    )\r\n    // 过滤掉获取失败的小组\r\n    groups.value = groupsWithDetails.filter(group => group !== null)\r\n  } catch (error) {\r\n    console.error('获取小组列表失败:', error)\r\n    ElMessage.error('获取小组列表失败')\r\n    groups.value = []\r\n  } finally {\r\n    loading.value = false\r\n  }\r\n}\r\n\r\n// 查看小组详情\r\nconst viewGroupDetail = async (group) => {\r\n  selectedGroup.value = group\r\n  detailLoading.value = true\r\n  try {\r\n    const [groupInfo, members] = await Promise.all([\r\n      getGroupById(group.group_id),\r\n      getGroupStudents(group.group_id)\r\n    ])\r\n    Object.assign(selectedGroup.value, groupInfo)\r\n    groupMembers.value = members\r\n    dialogVisible.value = true\r\n  } catch (error) {\r\n    ElMessage.error('获取小组详情失败')\r\n  } finally {\r\n    detailLoading.value = false\r\n  }\r\n}\r\n\r\n// 年级变化处理\r\nconst handleGradeChange = (value) => {\r\n  getGroups(value)\r\n}\r\n\r\n// 刷新列表\r\nconst refreshList = () => {\r\n  getGroups(selectedGrade.value)\r\n}\r\n\r\n// 对话框关闭处理\r\nconst handleDialogClose = () => {\r\n  selectedGroup.value = null\r\n  groupMembers.value = []\r\n}\r\n\r\nconst route = useRoute()\r\n\r\nonMounted(async () => {\r\n  await getGrades()\r\n  // 如果有年级参数，优先使用\r\n  if (route.query.grade) {\r\n    selectedGrade.value = route.query.grade\r\n    getGroups(selectedGrade.value)  // 确保传入年级参数\r\n  }\r\n  // 否则使用默认年级\r\n  else if (grades.value.length) {\r\n    selectedGrade.value = grades.value[0]\r\n    getGroups(selectedGrade.value)\r\n  }\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.my-groups {\r\n  .action-bar {\r\n    margin-bottom: 20px;\r\n\r\n    .bar-container {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n\r\n      .bar-title {\r\n        h2 {\r\n          margin: 0;\r\n          color: #1890ff;\r\n        }\r\n      }\r\n\r\n      .filter-area {\r\n        display: flex;\r\n        gap: 12px;\r\n        align-items: center;\r\n\r\n        .el-select {\r\n          width: 120px;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  .group-list {\r\n    min-height: 300px;\r\n\r\n    .group-card {\r\n      margin-bottom: 20px;\r\n      height: 100%;\r\n\r\n      .card-header {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n\r\n        .group-name {\r\n          font-weight: bold;\r\n          font-size: 16px;\r\n        }\r\n      }\r\n\r\n      .card-content {\r\n        .group-title {\r\n          color: #1890ff;\r\n          margin: 10px 0;\r\n        }\r\n\r\n        .group-info {\r\n          color: #666;\r\n          margin-bottom: 15px;\r\n          display: -webkit-box;\r\n          -webkit-box-orient: vertical;\r\n          -webkit-line-clamp: 2;\r\n          overflow: hidden;\r\n        }\r\n\r\n        .group-meta {\r\n          margin-bottom: 15px;\r\n          display: flex;\r\n          gap: 8px;\r\n        }\r\n\r\n        .card-footer {\r\n          text-align: right;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  .member-title {\r\n    margin: 20px 0 10px;\r\n    padding-left: 10px;\r\n    border-left: 4px solid #1890ff;\r\n  }\r\n}\r\n\r\n:deep(.group-description) {\r\n  .el-descriptions-item__content {\r\n    white-space: pre-wrap;\r\n    word-break: break-all;\r\n    line-height: 1.5;\r\n  }\r\n}\r\n</style> ","import script from \"./my-groups.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./my-groups.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./my-groups.vue?vue&type=style&index=0&id=f307f942&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-f307f942\"]])\n\nexport default __exports__"],"names":["exports","sfc","props","target","__vccOpts","key","val","getAllGrades","request","url","method","userStore","useUserStore","loading","ref","detailLoading","groups","selectedGrade","dialogVisible","selectedGroup","groupMembers","grades","getGrades","async","res","value","map","grade","gde_value","error","console","ElMessage","getGroups","userInfo","getTeacherGroups","tea_id","groupsWithDetails","Promise","all","groupInfo","getGroupById","groupId","filter","group","viewGroupDetail","members","group_id","getGroupStudents","Object","assign","handleGradeChange","refreshList","handleDialogClose","route","useRoute","onMounted","query","length","__exports__"],"sourceRoot":""}