{"version":3,"file":"js/163.40334ede.js","mappings":"uIAIAA,EAAQ,EAAU,CAACC,EAAKC,KACpB,MAAMC,EAASF,EAAIG,WAAaH,EAChC,IAAK,MAAOI,EAAKC,KAAQJ,EACrBC,EAAOE,GAAOC,EAElB,OAAOH,CAAM,C,qECNV,SAASI,IACd,OAAOC,EAAAA,EAAAA,GAAQ,CACbC,IAAK,qBACLC,OAAQ,OAEZ,C,qECLO,SAASC,IACd,OAAOH,EAAAA,EAAAA,GAAQ,CACbC,IAAK,qBACLC,OAAQ,OAEZ,C,kRC4JA,MAAME,GAASC,EAAAA,EAAAA,IAAI,IACbC,GAASD,EAAAA,EAAAA,IAAI,IACbE,GAAUF,EAAAA,EAAAA,IAAI,IACdG,GAAUH,EAAAA,EAAAA,KAAI,GAGdI,GAAgBJ,EAAAA,EAAAA,KAAI,GACpBK,GAAUL,EAAAA,EAAAA,IAAI,MACdM,GAAaN,EAAAA,EAAAA,KAAI,GACjBO,GAASP,EAAAA,EAAAA,KAAI,GAGbQ,GAAOC,EAAAA,EAAAA,IAAS,CACpBC,QAAS,GACTC,OAAQ,GACRC,OAAQ,GACRC,iBAAkB,EAClBC,eAAgB,EAChBC,eAAgB,EAChBC,SAAU,GACVC,UAAW,KAIPC,EAAQ,CACZP,OAAQ,CACN,CAAEQ,UAAU,EAAMC,QAAS,QAASC,QAAS,WAE/CT,OAAQ,CACN,CAAEO,UAAU,EAAMC,QAAS,QAASC,QAAS,WAE/CR,iBAAkB,CAChB,CAAEM,UAAU,EAAMC,QAAS,WAAYC,QAAS,SAElDP,eAAgB,CACd,CAAEK,UAAU,EAAMC,QAAS,aAAcC,QAAS,SAEpDN,eAAgB,CACd,CAAEI,UAAU,EAAMC,QAAS,aAAcC,QAAS,SAEpDL,SAAU,CACR,CAAEG,UAAU,EAAMC,QAAS,UAAWC,QAAS,WAEjDJ,UAAW,CACT,CAAEE,UAAU,EAAMC,QAAS,UAAWC,QAAS,UAK7CC,EAAUC,UACdpB,EAAQqB,OAAQ,EAChB,IACE,MAAOC,EAAYC,EAAYC,SAAqBC,QAAQC,IAAI,EAC9DnC,EAAAA,EAAAA,MACAI,EAAAA,EAAAA,MACAgC,EAAAA,EAAAA,QAEF/B,EAAOyB,MAAQC,EACfxB,EAAOuB,MAAQE,EACfxB,EAAQsB,MAAQG,CAClB,CAAE,MAAOI,GACPC,EAAAA,GAAUD,MAAM,SAClB,CAAE,QACA5B,EAAQqB,OAAQ,CAClB,GAIIS,EAAcA,KAClBX,GAAS,EAILY,EAAYA,KAChB3B,EAAOiB,OAAQ,EACfW,OAAOC,OAAO5B,EAAM,CAClBE,QAAS,GACTC,OAAQ,GACRC,OAAQ,GACRC,iBAAkB,EAClBC,eAAgB,EAChBC,eAAgB,EAChBC,SAAU,GACVC,UAAW,KAEbb,EAAcoB,OAAQ,CAAI,EAItBa,EAAcC,IAClB/B,EAAOiB,OAAQ,EAEf,MAAMe,EAAUxC,EAAOyB,MAAMgB,MAAKC,GAAKA,EAAEC,YAAcJ,EAAIK,OAAMhC,OAC3DiC,EAAU3C,EAAOuB,MAAMgB,MAAKK,GAAKA,EAAEC,WAAaR,EAAIS,OAAMnC,OAEhEuB,OAAOC,OAAO5B,EAAM,CAClBE,QAAS4B,EAAI5B,QACbC,OAAQ4B,EACR3B,OAAQgC,EACR/B,iBAAkByB,EAAIzB,iBACtBC,eAAgBwB,EAAIxB,eACpBC,eAAgBuB,EAAIvB,eACpBC,SAAUsB,EAAItB,SACdC,UAAWqB,EAAIrB,YAEjBb,EAAcoB,OAAQ,CAAI,EAItBwB,EAAazB,UACjB,GAAKlB,EAAQmB,MAEb,IAIE,SAHMnB,EAAQmB,MAAMyB,WACpB3C,EAAWkB,OAAQ,EAEfjB,EAAOiB,MAAO,CAEhB,MAAM0B,EAAa,CACjBvC,OAAQH,EAAKG,OACbC,OAAQJ,EAAKI,OACbC,iBAAkBL,EAAKK,iBACvBC,eAAgBN,EAAKM,eACrBC,eAAgBP,EAAKO,eACrBC,SAAUR,EAAKQ,SACfC,UAAWT,EAAKS,iBAEZkC,EAAAA,EAAAA,IAAa3C,EAAKE,QAASwC,GACjClB,EAAAA,GAAUoB,QAAQ,OACpB,KAAO,CAEL,MAAMC,EAAU,CACd1C,OAAQH,EAAKG,OACbC,OAAQJ,EAAKI,OACbC,iBAAkBL,EAAKK,iBACvBC,eAAgBN,EAAKM,eACrBC,eAAgBP,EAAKO,eACrBC,SAAUR,EAAKQ,SACfC,UAAWT,EAAKS,iBAEZqC,EAAAA,EAAAA,IAAUD,GAChBrB,EAAAA,GAAUoB,QAAQ,OACpB,CAEAhD,EAAcoB,OAAQ,EACtBF,GACF,CAAE,MAAOS,GACPC,EAAAA,GAAUD,MAAMxB,EAAOiB,MAAQ,OAAS,OAC1C,CAAE,QACAlB,EAAWkB,OAAQ,CACrB,GAII+B,EAAehC,UACnB,UACQiC,EAAAA,EAAaC,QACjB,SAASnB,EAAIK,OAAOL,EAAIS,YACxB,KACA,CACEW,kBAAmB,KACnBC,iBAAkB,KAClBC,KAAM,kBAIJC,EAAAA,EAAAA,IAAavB,EAAI5B,SACvBsB,EAAAA,GAAUoB,QAAQ,QAClB9B,GACF,CAAE,MAAOS,GACO,WAAVA,GACFC,EAAAA,GAAUD,MAAM,OAEpB,GAII+B,EAAkBC,IACtB,IAAKA,EAAS,MAAO,GACrB,MAAMC,EAAO,IAAIC,KAAKF,GACtB,OAAOC,EAAKE,eAAe,QAAS,CAClCC,KAAM,UACNC,MAAO,UACPC,IAAK,UACLC,KAAM,UACNC,OAAQ,UACRC,QAAQ,GACR,E,OAGJC,EAAAA,EAAAA,KAAU,KACRnD,GAAS,I,iiJC7VX,MAAMoD,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,O","sources":["webpack://gdmu-mentor-selection/./node_modules/vue-loader/dist/exportHelper.js","webpack://gdmu-mentor-selection/./src/api/grade.js","webpack://gdmu-mentor-selection/./src/api/major.js","webpack://gdmu-mentor-selection/./src/views/admin/config-manage.vue","webpack://gdmu-mentor-selection/./src/views/admin/config-manage.vue?473c"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// runtime helper for setting properties on components\n// in a tree-shakable way\nexports.default = (sfc, props) => {\n    const target = sfc.__vccOpts || sfc;\n    for (const [key, val] of props) {\n        target[key] = val;\n    }\n    return target;\n};\n","import request from '@/utils/request'\r\n\r\n// 获取所有年级\r\nexport function getAllGrades() {\r\n  return request({\r\n    url: '/api/Grade/get-all',\r\n    method: 'get'\r\n  })\r\n} ","import request from '@/utils/request'\r\n\r\n// 获取所有专业\r\nexport function getAllMajors() {\r\n  return request({\r\n    url: '/api/Major/get-all',\r\n    method: 'get'\r\n  })\r\n} ","<template>\r\n  <div class=\"config-manage\">\r\n    <div class=\"page-header\">\r\n      <h2>配置管理</h2>\r\n      <div class=\"header-desc\">管理各专业年级的选择配置</div>\r\n    </div>\r\n\r\n    <!-- 操作栏 -->\r\n    <div class=\"operation-bar\">\r\n      <el-button type=\"primary\" @click=\"handleAdd\">\r\n        <el-icon><Plus /></el-icon>\r\n        添加配置\r\n      </el-button>\r\n      <el-button type=\"primary\" @click=\"refreshData\">\r\n        <el-icon><Refresh /></el-icon>\r\n        刷新数据\r\n      </el-button>\r\n    </div>\r\n\r\n    <!-- 配置列表 -->\r\n    <el-table\r\n      :data=\"configs\"\r\n      stripe\r\n      v-loading=\"loading\"\r\n      style=\"width: 100%\"\r\n      :header-cell-style=\"{\r\n        background: '#fafafa',\r\n        color: '#606266',\r\n        fontWeight: 600\r\n      }\"\r\n      border\r\n    >\r\n      <el-table-column prop=\"gde\" label=\"年级\" width=\"100\">\r\n        <template #default=\"{ row }\">\r\n          {{ row.gde }}级\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column prop=\"mjr\" label=\"专业\" min-width=\"180\" />\r\n      <el-table-column prop=\"max_group_member\" label=\"最大组员数\" width=\"120\" />\r\n      <el-table-column prop=\"max_stu_choice\" label=\"学生最大选择数\" width=\"140\" />\r\n      <el-table-column prop=\"max_tea_choice\" label=\"教师最大选择数\" width=\"140\" />\r\n      <el-table-column prop=\"end_time\" label=\"截止时间\" width=\"180\">\r\n        <template #default=\"{ row }\">\r\n          {{ formatDateTime(row.end_time) }}\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column prop=\"conf_info\" label=\"说明\" min-width=\"200\" show-overflow-tooltip />\r\n      <el-table-column label=\"操作\" width=\"200\" fixed=\"right\">\r\n        <template #default=\"{ row }\">\r\n          <el-button \r\n            type=\"primary\" \r\n            link\r\n            @click=\"handleEdit(row)\"\r\n          >\r\n            编辑\r\n          </el-button>\r\n          <el-button \r\n            type=\"danger\" \r\n            link\r\n            @click=\"handleDelete(row)\"\r\n          >\r\n            删除\r\n          </el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <!-- 添加/编辑配置对话框 -->\r\n    <el-dialog\r\n      :title=\"isEdit ? '编辑配置' : '添加配置'\"\r\n      v-model=\"dialogVisible\"\r\n      width=\"50%\"\r\n    >\r\n      <el-form\r\n        ref=\"formRef\"\r\n        :model=\"form\"\r\n        :rules=\"rules\"\r\n        label-width=\"140px\"\r\n      >\r\n        <el-form-item label=\"年级\" prop=\"gde_id\">\r\n          <el-select v-model=\"form.gde_id\" style=\"width: 100%\">\r\n            <el-option\r\n              v-for=\"grade in grades\"\r\n              :key=\"grade.gde_id\"\r\n              :label=\"`${grade.gde_value}级`\"\r\n              :value=\"grade.gde_id\"\r\n            />\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"专业\" prop=\"mjr_id\">\r\n          <el-select v-model=\"form.mjr_id\" style=\"width: 100%\">\r\n            <el-option\r\n              v-for=\"major in majors\"\r\n              :key=\"major.mjr_id\"\r\n              :label=\"major.mjr_name\"\r\n              :value=\"major.mjr_id\"\r\n            />\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"最大组员数\" prop=\"max_group_member\">\r\n          <el-input-number \r\n            v-model=\"form.max_group_member\" \r\n            :min=\"2\" \r\n            :max=\"10\"\r\n            style=\"width: 100%\"\r\n          />\r\n        </el-form-item>\r\n        <el-form-item label=\"学生最大选择数\" prop=\"max_stu_choice\">\r\n          <el-input-number \r\n            v-model=\"form.max_stu_choice\" \r\n            :min=\"1\" \r\n            :max=\"10\"\r\n            style=\"width: 100%\"\r\n          />\r\n        </el-form-item>\r\n        <el-form-item label=\"教师最大选择数\" prop=\"max_tea_choice\">\r\n          <el-input-number \r\n            v-model=\"form.max_tea_choice\" \r\n            :min=\"1\" \r\n            :max=\"10\"\r\n            style=\"width: 100%\"\r\n          />\r\n        </el-form-item>\r\n        <el-form-item label=\"截止时间\" prop=\"end_time\">\r\n          <el-date-picker\r\n            v-model=\"form.end_time\"\r\n            type=\"datetime\"\r\n            placeholder=\"选择截止时间\"\r\n            style=\"width: 100%\"\r\n            value-format=\"YYYY-MM-DDTHH:mm:ss.SSSZ\"\r\n          />\r\n        </el-form-item>\r\n        <el-form-item label=\"说明\" prop=\"conf_info\">\r\n          <el-input \r\n            v-model=\"form.conf_info\" \r\n            type=\"textarea\" \r\n            :rows=\"4\"\r\n            placeholder=\"请输入配置说明\"\r\n          />\r\n        </el-form-item>\r\n      </el-form>\r\n      <template #footer>\r\n        <el-button @click=\"dialogVisible = false\">取消</el-button>\r\n        <el-button \r\n          type=\"primary\" \r\n          @click=\"submitForm\"\r\n          :loading=\"submitting\"\r\n        >\r\n          确定\r\n        </el-button>\r\n      </template>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, reactive, onMounted } from 'vue'\r\nimport { ElMessage, ElMessageBox } from 'element-plus'\r\nimport { Plus, Refresh } from '@element-plus/icons-vue'\r\nimport { getAllGrades } from '@/api/grade'\r\nimport { getAllMajors } from '@/api/major'\r\nimport { getAllConfigs, addConfig, deleteConfig, updateConfig } from '@/api/config'\r\n\r\n// 基础数据\r\nconst grades = ref([])\r\nconst majors = ref([])\r\nconst configs = ref([])\r\nconst loading = ref(false)\r\n\r\n// 对话框相关\r\nconst dialogVisible = ref(false)\r\nconst formRef = ref(null)\r\nconst submitting = ref(false)\r\nconst isEdit = ref(false)\r\n\r\n// 表单数据\r\nconst form = reactive({\r\n  conf_id: '',\r\n  gde_id: '',\r\n  mjr_id: '',\r\n  max_group_member: 5,\r\n  max_stu_choice: 3,\r\n  max_tea_choice: 3,\r\n  end_time: '',\r\n  conf_info: ''\r\n})\r\n\r\n// 表单验证规则\r\nconst rules = {\r\n  gde_id: [\r\n    { required: true, message: '请选择年级', trigger: 'change' }\r\n  ],\r\n  mjr_id: [\r\n    { required: true, message: '请选择专业', trigger: 'change' }\r\n  ],\r\n  max_group_member: [\r\n    { required: true, message: '请设置最大组员数', trigger: 'blur' }\r\n  ],\r\n  max_stu_choice: [\r\n    { required: true, message: '请设置学生最大选择数', trigger: 'blur' }\r\n  ],\r\n  max_tea_choice: [\r\n    { required: true, message: '请设置教师最大选择数', trigger: 'blur' }\r\n  ],\r\n  end_time: [\r\n    { required: true, message: '请选择截止时间', trigger: 'change' }\r\n  ],\r\n  conf_info: [\r\n    { required: true, message: '请输入配置说明', trigger: 'blur' }\r\n  ]\r\n}\r\n\r\n// 获取所有数据\r\nconst getData = async () => {\r\n  loading.value = true\r\n  try {\r\n    const [gradesData, majorsData, configsData] = await Promise.all([\r\n      getAllGrades(),\r\n      getAllMajors(),\r\n      getAllConfigs()\r\n    ])\r\n    grades.value = gradesData\r\n    majors.value = majorsData\r\n    configs.value = configsData\r\n  } catch (error) {\r\n    ElMessage.error('获取数据失败')\r\n  } finally {\r\n    loading.value = false\r\n  }\r\n}\r\n\r\n// 刷新数据\r\nconst refreshData = () => {\r\n  getData()\r\n}\r\n\r\n// 添加配置\r\nconst handleAdd = () => {\r\n  isEdit.value = false\r\n  Object.assign(form, {\r\n    conf_id: '',\r\n    gde_id: '',\r\n    mjr_id: '',\r\n    max_group_member: 5,\r\n    max_stu_choice: 3,\r\n    max_tea_choice: 3,\r\n    end_time: '',\r\n    conf_info: ''\r\n  })\r\n  dialogVisible.value = true\r\n}\r\n\r\n// 编辑配置\r\nconst handleEdit = (row) => {\r\n  isEdit.value = true\r\n  // 找到对应的年级和专业ID\r\n  const gradeId = grades.value.find(g => g.gde_value === row.gde)?.gde_id\r\n  const majorId = majors.value.find(m => m.mjr_name === row.mjr)?.mjr_id\r\n  \r\n  Object.assign(form, {\r\n    conf_id: row.conf_id,\r\n    gde_id: gradeId,\r\n    mjr_id: majorId,\r\n    max_group_member: row.max_group_member,\r\n    max_stu_choice: row.max_stu_choice,\r\n    max_tea_choice: row.max_tea_choice,\r\n    end_time: row.end_time,\r\n    conf_info: row.conf_info\r\n  })\r\n  dialogVisible.value = true\r\n}\r\n\r\n// 提交表单\r\nconst submitForm = async () => {\r\n  if (!formRef.value) return\r\n  \r\n  try {\r\n    await formRef.value.validate()\r\n    submitting.value = true\r\n    \r\n    if (isEdit.value) {\r\n      \r\n      const updateData = {\r\n        gde_id: form.gde_id,\r\n        mjr_id: form.mjr_id,\r\n        max_group_member: form.max_group_member,\r\n        max_stu_choice: form.max_stu_choice,\r\n        max_tea_choice: form.max_tea_choice,\r\n        end_time: form.end_time,\r\n        conf_info: form.conf_info\r\n      }\r\n      await updateConfig(form.conf_id, updateData)\r\n      ElMessage.success('修改成功')\r\n    } else {\r\n      // 添加配置时使用ID\r\n      const addData = {\r\n        gde_id: form.gde_id,\r\n        mjr_id: form.mjr_id,\r\n        max_group_member: form.max_group_member,\r\n        max_stu_choice: form.max_stu_choice,\r\n        max_tea_choice: form.max_tea_choice,\r\n        end_time: form.end_time,\r\n        conf_info: form.conf_info\r\n      }\r\n      await addConfig(addData)\r\n      ElMessage.success('添加成功')\r\n    }\r\n\r\n    dialogVisible.value = false\r\n    getData()\r\n  } catch (error) {\r\n    ElMessage.error(isEdit.value ? '修改失败' : '添加失败')\r\n  } finally {\r\n    submitting.value = false\r\n  }\r\n}\r\n\r\n// 删除配置\r\nconst handleDelete = async (row) => {\r\n  try {\r\n    await ElMessageBox.confirm(\r\n      `确定要删除 ${row.gde}级${row.mjr} 的配置吗？`,\r\n      '警告',\r\n      {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }\r\n    )\r\n    \r\n    await deleteConfig(row.conf_id)\r\n    ElMessage.success('删除成功')\r\n    getData()\r\n  } catch (error) {\r\n    if (error !== 'cancel') {\r\n      ElMessage.error('删除失败')\r\n    }\r\n  }\r\n}\r\n\r\n// 格式化日期时间\r\nconst formatDateTime = (dateStr) => {\r\n  if (!dateStr) return ''\r\n  const date = new Date(dateStr)\r\n  return date.toLocaleString('zh-CN', {\r\n    year: 'numeric',\r\n    month: '2-digit',\r\n    day: '2-digit',\r\n    hour: '2-digit',\r\n    minute: '2-digit',\r\n    hour12: false\r\n  })\r\n}\r\n\r\nonMounted(() => {\r\n  getData()\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.config-manage {\r\n  .page-header {\r\n    margin-bottom: 20px;\r\n    padding: 20px;\r\n    background: #fff;\r\n    border-radius: 4px;\r\n    box-shadow: 0 2px 12px 0 rgba(0,0,0,0.1);\r\n\r\n    h2 {\r\n      margin: 0;\r\n      color: #1890ff;\r\n      font-size: 24px;\r\n      margin-bottom: 8px;\r\n    }\r\n\r\n    .header-desc {\r\n      color: #909399;\r\n      font-size: 14px;\r\n    }\r\n  }\r\n\r\n  .operation-bar {\r\n    margin-bottom: 20px;\r\n    padding: 20px;\r\n    background: #fff;\r\n    border-radius: 4px;\r\n    box-shadow: 0 2px 12px 0 rgba(0,0,0,0.1);\r\n    display: flex;\r\n    gap: 10px;\r\n  }\r\n\r\n  :deep(.el-table) {\r\n    border-radius: 8px;\r\n    overflow: hidden;\r\n    \r\n    .el-table__header-wrapper {\r\n      th {\r\n        border-bottom: 2px solid #ebeef5;\r\n      }\r\n    }\r\n    \r\n    .el-table__body-wrapper {\r\n      td {\r\n        border-bottom: 1px solid #ebeef5;\r\n      }\r\n    }\r\n    \r\n    .el-table__row:hover > td {\r\n      background: #f5f7fa !important;\r\n    }\r\n  }\r\n}\r\n</style> ","import script from \"./config-manage.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./config-manage.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./config-manage.vue?vue&type=style&index=0&id=cad2a5ba&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-cad2a5ba\"]])\n\nexport default __exports__"],"names":["exports","sfc","props","target","__vccOpts","key","val","getAllGrades","request","url","method","getAllMajors","grades","ref","majors","configs","loading","dialogVisible","formRef","submitting","isEdit","form","reactive","conf_id","gde_id","mjr_id","max_group_member","max_stu_choice","max_tea_choice","end_time","conf_info","rules","required","message","trigger","getData","async","value","gradesData","majorsData","configsData","Promise","all","getAllConfigs","error","ElMessage","refreshData","handleAdd","Object","assign","handleEdit","row","gradeId","find","g","gde_value","gde","majorId","m","mjr_name","mjr","submitForm","validate","updateData","updateConfig","success","addData","addConfig","handleDelete","ElMessageBox","confirm","confirmButtonText","cancelButtonText","type","deleteConfig","formatDateTime","dateStr","date","Date","toLocaleString","year","month","day","hour","minute","hour12","onMounted","__exports__"],"sourceRoot":""}